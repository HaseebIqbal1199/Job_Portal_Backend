{
  "openapi": "3.0.0",
  "info": {
    "title": "ServiceM8 API",
    "description": "Move your app forward with the ServiceM8 API\n\n\n\n## Limits and Throttling\nTo ensure continuous quality of service, API usage can be subject to throttling. The throttle will be applied once an API consumer reaches a certain \nthreshold in terms of a maximum number of requests per minute. Most clients will never hit this threshold, but those that do, will get met by a \nHTTP 429 Too Many Requests response code. \n \nThere is a limit of 180 requests per minute, if you reach this you will receive a HTTP 429 with a text body of \"Number of allowed API requests per minute exceeded\".\nThere is a limit of 20000 requests per day, if you reach this you will receive a HTTP 429 with a text body of \"Number of allowed API requests per day exceeded\".\n\nWe encourage all API developers to anticipate this error, and take appropriate measures like e.g. using a cached value from a previous call, or passing on a message to the end user that gets subjected to this behaviour (if any).\n\nLimits are per Addon per account.\n",
    "version": "1.0.0",
    "termsOfService": "https://www.servicem8.com/terms-of-service"
  },
  "paths": {
    "/allocationwindow.json": {
      "get": {
        "tags": [
          "Allocation Windows"
        ],
        "operationId": "get-AllocationWindow-all",
        "summary": "List all Allocation Windows",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Allocation Windows",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-b7f9-4230-b88e-21db00c9909b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "name": {
                        "type": "string"
                      },
                      "start_time": {
                        "type": "number"
                      },
                      "end_time": {
                        "type": "number"
                      },
                      "sort_priority": {
                        "type": "number"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-4d70-493c-9426-21db076265cb",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "name": "string",
                        "start_time": "number",
                        "end_time": "number",
                        "sort_priority": "number"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Allocation Windows"
        ],
        "operationId": "post-AllocationWindow-create",
        "summary": "Create a new Allocation Window",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-b7f9-4230-b88e-21db00c9909b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string"
                  },
                  "start_time": {
                    "type": "number"
                  },
                  "end_time": {
                    "type": "number"
                  },
                  "sort_priority": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "description": "Allocation Window record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Allocation Window record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/allocationwindow/{uuid}.json": {
      "get": {
        "tags": [
          "Allocation Windows"
        ],
        "operationId": "get-AllocationWindow-single",
        "summary": "Retrieve an Allocation Window",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Allocation Window",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Allocation Window record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-b7f9-4230-b88e-21db00c9909b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "name": {
                      "type": "string"
                    },
                    "start_time": {
                      "type": "number"
                    },
                    "end_time": {
                      "type": "number"
                    },
                    "sort_priority": {
                      "type": "number"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-4048-4a5c-b0d9-21db046b9c6b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "name": "string",
                      "start_time": "number",
                      "end_time": "number",
                      "sort_priority": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Allocation Windows"
        ],
        "operationId": "post-AllocationWindow-single",
        "summary": "Update an Allocation Window",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Allocation Window",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-b7f9-4230-b88e-21db00c9909b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string"
                  },
                  "start_time": {
                    "type": "number"
                  },
                  "end_time": {
                    "type": "number"
                  },
                  "sort_priority": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "description": "Allocation Window fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Allocation Windows"
        ],
        "operationId": "delete-AllocationWindow-single",
        "summary": "Delete an Allocation Window",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Allocation Window",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Allocation Window successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/asset.json": {
      "get": {
        "tags": [
          "Assets"
        ],
        "operationId": "get-Asset-all",
        "summary": "List all Assets",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_assets"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Assets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-9454-4e1d-a1af-21db0054f25b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "company_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-200b-4f8e-a56f-21db08b7388b",
                        "description": "UUID of the Client to which this Asset is attached"
                      },
                      "asset_code": {
                        "type": "string",
                        "description": "The unique code printed on this Asset's attached label (read only) (Read-only)"
                      },
                      "asset_type_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-5b49-4fa0-8a7f-21db0b7c1acb",
                        "description": "UUID of an Asset Type which defines the fields that can be stored for this Asset (read only) (Read-only)"
                      },
                      "name": {
                        "type": "string",
                        "description": "User-facing description of this asset",
                        "maxLength": 100
                      },
                      "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "Latitude component of the Asset's location in degrees"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "Longitude component of the Asset's location in degrees"
                      },
                      "geo_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "description": "Timestamp at which the Asset's location was last updated"
                      },
                      "altitude": {
                        "type": "number",
                        "description": "Altitude component of the Asset's location in metres"
                      },
                      "field_data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "uuid": {
                              "type": "string",
                              "format": "uuid",
                              "description": "Must be the UUID of an AssetTypeField"
                            },
                            "fieldType": {
                              "type": "string"
                            },
                            "fieldName": {
                              "type": "string"
                            },
                            "fieldValue": {
                              "type": "string",
                              "description": "Convert all values to string. Dates shall be in Y-m-d format."
                            },
                            "sortOrder": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "uuid",
                            "fieldType",
                            "fieldName",
                            "fieldValue",
                            "sortOrder"
                          ]
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-d814-4689-81c2-21db03a7d6fb",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "company_uuid": "123e4567-dd17-4734-9d1e-21db0142ab0b",
                        "asset_code": "string",
                        "asset_type_uuid": "123e4567-3282-4ce0-94b5-21db04318cbb",
                        "name": "string",
                        "lat": "number",
                        "lng": "number",
                        "geo_timestamp": "YYYY-MM-DD HH:MM:SS",
                        "altitude": "number",
                        "field_data": [
                          {
                            "uuid": "string",
                            "fieldType": "string",
                            "fieldName": "string",
                            "fieldValue": "string",
                            "sortOrder": "number"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/asset/{uuid}.json": {
      "get": {
        "tags": [
          "Assets"
        ],
        "operationId": "get-Asset-single",
        "summary": "Retrieve an Asset",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_assets"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Asset",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-9454-4e1d-a1af-21db0054f25b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "company_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-200b-4f8e-a56f-21db08b7388b",
                      "description": "UUID of the Client to which this Asset is attached"
                    },
                    "asset_code": {
                      "type": "string",
                      "description": "The unique code printed on this Asset's attached label (read only) (Read-only)"
                    },
                    "asset_type_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-5b49-4fa0-8a7f-21db0b7c1acb",
                      "description": "UUID of an Asset Type which defines the fields that can be stored for this Asset (read only) (Read-only)"
                    },
                    "name": {
                      "type": "string",
                      "description": "User-facing description of this asset",
                      "maxLength": 100
                    },
                    "lat": {
                      "type": "number",
                      "format": "float",
                      "description": "Latitude component of the Asset's location in degrees"
                    },
                    "lng": {
                      "type": "number",
                      "format": "float",
                      "description": "Longitude component of the Asset's location in degrees"
                    },
                    "geo_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "description": "Timestamp at which the Asset's location was last updated"
                    },
                    "altitude": {
                      "type": "number",
                      "description": "Altitude component of the Asset's location in metres"
                    },
                    "field_data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Must be the UUID of an AssetTypeField"
                          },
                          "fieldType": {
                            "type": "string"
                          },
                          "fieldName": {
                            "type": "string"
                          },
                          "fieldValue": {
                            "type": "string",
                            "description": "Convert all values to string. Dates shall be in Y-m-d format."
                          },
                          "sortOrder": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "uuid",
                          "fieldType",
                          "fieldName",
                          "fieldValue",
                          "sortOrder"
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-fb56-4d9e-94c4-21db006d457b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "company_uuid": "123e4567-1903-430f-a029-21db0b50ccbb",
                      "asset_code": "string",
                      "asset_type_uuid": "123e4567-4ac5-40bf-bca2-21db0baec92b",
                      "name": "string",
                      "lat": "number",
                      "lng": "number",
                      "geo_timestamp": "YYYY-MM-DD HH:MM:SS",
                      "altitude": "number",
                      "field_data": [
                        {
                          "uuid": "string",
                          "fieldType": "string",
                          "fieldName": "string",
                          "fieldValue": "string",
                          "sortOrder": "number"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Assets"
        ],
        "operationId": "post-Asset-single",
        "summary": "Update an Asset",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Asset",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-9454-4e1d-a1af-21db0054f25b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "company_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-200b-4f8e-a56f-21db08b7388b",
                    "description": "UUID of the Client to which this Asset is attached"
                  },
                  "asset_code": {
                    "type": "string",
                    "description": "The unique code printed on this Asset's attached label (read only) (Read-only)"
                  },
                  "asset_type_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-5b49-4fa0-8a7f-21db0b7c1acb",
                    "description": "UUID of an Asset Type which defines the fields that can be stored for this Asset (read only) (Read-only)"
                  },
                  "name": {
                    "type": "string",
                    "description": "User-facing description of this asset",
                    "maxLength": 100
                  },
                  "lat": {
                    "type": "number",
                    "format": "float",
                    "description": "Latitude component of the Asset's location in degrees"
                  },
                  "lng": {
                    "type": "number",
                    "format": "float",
                    "description": "Longitude component of the Asset's location in degrees"
                  },
                  "geo_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "description": "Timestamp at which the Asset's location was last updated"
                  },
                  "altitude": {
                    "type": "number",
                    "description": "Altitude component of the Asset's location in metres"
                  },
                  "field_data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Must be the UUID of an AssetTypeField"
                        },
                        "fieldType": {
                          "type": "string"
                        },
                        "fieldName": {
                          "type": "string"
                        },
                        "fieldValue": {
                          "type": "string",
                          "description": "Convert all values to string. Dates shall be in Y-m-d format."
                        },
                        "sortOrder": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "uuid",
                        "fieldType",
                        "fieldName",
                        "fieldValue",
                        "sortOrder"
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "Asset fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Assets"
        ],
        "operationId": "delete-Asset-single",
        "summary": "Delete an Asset",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Asset",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/assettype.json": {
      "get": {
        "tags": [
          "Asset Types"
        ],
        "operationId": "get-AssetType-all",
        "summary": "List all Asset Types",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_assets"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Asset Types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-5549-4fa6-87a1-21db0bf239eb"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-3ed2-47b5-a87b-21db02151a7b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "name": "string"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Asset Types"
        ],
        "operationId": "post-AssetType-create",
        "summary": "Create a new Asset Type",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_assets**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_assets"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-5549-4fa6-87a1-21db0bf239eb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Asset Type record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Asset Type record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/assettype/{uuid}.json": {
      "get": {
        "tags": [
          "Asset Types"
        ],
        "operationId": "get-AssetType-single",
        "summary": "Retrieve an Asset Type",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_assets"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Asset Type",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset Type record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-5549-4fa6-87a1-21db0bf239eb"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-fe1a-48c5-93eb-21db0ca566ab",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "name": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Asset Types"
        ],
        "operationId": "post-AssetType-single",
        "summary": "Update an Asset Type",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Asset Type",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-5549-4fa6-87a1-21db0bf239eb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Asset Type fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Asset Types"
        ],
        "operationId": "delete-AssetType-single",
        "summary": "Delete an Asset Type",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Asset Type",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset Type successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/assettypefield.json": {
      "get": {
        "tags": [
          "Asset Type Fields"
        ],
        "operationId": "get-AssetTypeField-all",
        "summary": "List all Asset Type Fields",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_assets"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Asset Type Fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-8c80-4103-8755-21db00d93deb"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "asset_type_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-afc7-4f5b-a771-21db0af9958b",
                        "description": "(Read-only)"
                      },
                      "name": {
                        "type": "string"
                      },
                      "field_data": {
                        "type": "object",
                        "properties": {
                          "fieldType": {
                            "type": "string",
                            "enum": [
                              "Text",
                              "Number",
                              "Date",
                              "Multiple Choice"
                            ]
                          },
                          "mandatory": {
                            "type": "boolean"
                          },
                          "choices": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "fieldType",
                          "mandatory"
                        ]
                      },
                      "sort_order": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-d18e-44d0-b19e-21db0ded41ab",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "asset_type_uuid": "123e4567-07f1-46da-b793-21db087112db",
                        "name": "string",
                        "field_data": {
                          "fieldType": "string",
                          "mandatory": "string",
                          "choices": [
                            "string"
                          ]
                        },
                        "sort_order": "number"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Asset Type Fields"
        ],
        "operationId": "post-AssetTypeField-create",
        "summary": "Create a new Asset Type Field",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_assets**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_assets"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-8c80-4103-8755-21db00d93deb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "asset_type_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-afc7-4f5b-a771-21db0af9958b",
                    "description": "(Read-only)"
                  },
                  "name": {
                    "type": "string"
                  },
                  "field_data": {
                    "type": "object",
                    "properties": {
                      "fieldType": {
                        "type": "string",
                        "enum": [
                          "Text",
                          "Number",
                          "Date",
                          "Multiple Choice"
                        ]
                      },
                      "mandatory": {
                        "type": "boolean"
                      },
                      "choices": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "fieldType",
                      "mandatory"
                    ]
                  },
                  "sort_order": {
                    "type": "number"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Asset Type Field record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Asset Type Field record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/assettypefield/{uuid}.json": {
      "get": {
        "tags": [
          "Asset Type Fields"
        ],
        "operationId": "get-AssetTypeField-single",
        "summary": "Retrieve an Asset Type Field",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_assets"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Asset Type Field",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset Type Field record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-8c80-4103-8755-21db00d93deb"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "asset_type_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-afc7-4f5b-a771-21db0af9958b",
                      "description": "(Read-only)"
                    },
                    "name": {
                      "type": "string"
                    },
                    "field_data": {
                      "type": "object",
                      "properties": {
                        "fieldType": {
                          "type": "string",
                          "enum": [
                            "Text",
                            "Number",
                            "Date",
                            "Multiple Choice"
                          ]
                        },
                        "mandatory": {
                          "type": "boolean"
                        },
                        "choices": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "fieldType",
                        "mandatory"
                      ]
                    },
                    "sort_order": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-4917-4f6b-9f57-21db0f35710b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "asset_type_uuid": "123e4567-0a40-48b9-88a6-21db0a96290b",
                      "name": "string",
                      "field_data": {
                        "fieldType": "string",
                        "mandatory": "string",
                        "choices": [
                          "string"
                        ]
                      },
                      "sort_order": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Asset Type Fields"
        ],
        "operationId": "post-AssetTypeField-single",
        "summary": "Update an Asset Type Field",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Asset Type Field",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-8c80-4103-8755-21db00d93deb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "asset_type_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-afc7-4f5b-a771-21db0af9958b",
                    "description": "(Read-only)"
                  },
                  "name": {
                    "type": "string"
                  },
                  "field_data": {
                    "type": "object",
                    "properties": {
                      "fieldType": {
                        "type": "string",
                        "enum": [
                          "Text",
                          "Number",
                          "Date",
                          "Multiple Choice"
                        ]
                      },
                      "mandatory": {
                        "type": "boolean"
                      },
                      "choices": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "fieldType",
                      "mandatory"
                    ]
                  },
                  "sort_order": {
                    "type": "number"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Asset Type Field fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Asset Type Fields"
        ],
        "operationId": "delete-AssetTypeField-single",
        "summary": "Delete an Asset Type Field",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Asset Type Field",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset Type Field successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/attachment.json": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "operationId": "get-Attachment-all",
        "summary": "List all Attachments",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Attachments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-1d49-48ad-9fa3-21db0b95d0db"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "related_object": {
                        "type": "string"
                      },
                      "related_object_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-46be-44bc-bba4-21db0709e07b"
                      },
                      "attachment_name": {
                        "type": "string"
                      },
                      "file_type": {
                        "type": "string"
                      },
                      "created_by_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-3b7e-423f-aaca-21db072afdfb"
                      },
                      "timestamp": {
                        "type": "string"
                      },
                      "attachment_source": {
                        "type": "string"
                      },
                      "tags": {
                        "type": "string"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float"
                      },
                      "lat": {
                        "type": "number",
                        "format": "float"
                      },
                      "photo_width": {
                        "type": "number",
                        "description": "(Read-only)"
                      },
                      "photo_height": {
                        "type": "number",
                        "description": "(Read-only)"
                      },
                      "extracted_info": {
                        "type": "string"
                      },
                      "is_favourite": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "description": "\n\nValid values are [0,1]"
                      },
                      "class_name": {
                        "type": "string",
                        "description": "(Read-only)"
                      },
                      "metadata": {
                        "type": "object",
                        "additionalProperties": true
                      },
                      "signature_data": {
                        "type": "object",
                        "description": "(Read-only)",
                        "properties": {
                          "templateSupportsSignature": {
                            "type": "boolean",
                            "description": "True if the template from which this document was produced supports signing"
                          },
                          "documentSnapshotUUID": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The template mergefield snapshot which captured the unsigned document state"
                          },
                          "documentSnapshotExpiresUnixtime": {
                            "type": "number",
                            "description": "The unixtime at which the snapshot expires"
                          },
                          "signedDocumentAttachmentUUID": {
                            "type": "string",
                            "format": "uuid",
                            "description": "If a signed version of this document exists, references the UUID of the attachment"
                          },
                          "unsignedDocumentAttachmentUUID": {
                            "type": "string",
                            "format": "uuid",
                            "description": "References the UUID of the unsigned version of this document"
                          },
                          "signatureDetails": {
                            "type": "object",
                            "properties": {
                              "signatureText": {
                                "type": "string",
                                "description": "Text entered by the signer as the electronic representation of thier signature"
                              },
                              "signatureUnixtime": {
                                "type": "number",
                                "description": "Unixtime at which the document was signed"
                              },
                              "metadata": {
                                "type": "object",
                                "description": "Optional additional data regarding the signature event"
                              }
                            },
                            "required": [
                              "signatureText",
                              "signatureUnixtime"
                            ]
                          }
                        },
                        "required": [
                          "templateSupportsSignature"
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-78a0-4716-9167-21db06b66ccb",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "related_object": "string",
                        "related_object_uuid": "123e4567-f751-4405-9a8b-21db0e43929b",
                        "attachment_name": "string",
                        "file_type": "string",
                        "created_by_staff_uuid": "123e4567-92db-4286-b620-21db01f8b46b",
                        "timestamp": "string",
                        "attachment_source": "string",
                        "tags": "string",
                        "lng": "number",
                        "lat": "number",
                        "photo_width": "number",
                        "photo_height": "number",
                        "extracted_info": "string",
                        "is_favourite": "number",
                        "class_name": "string",
                        "metadata": [],
                        "signature_data": {
                          "templateSupportsSignature": "string",
                          "documentSnapshotUUID": "string",
                          "documentSnapshotExpiresUnixtime": "number",
                          "signedDocumentAttachmentUUID": "string",
                          "unsignedDocumentAttachmentUUID": "string",
                          "signatureDetails": {
                            "signatureText": "string",
                            "signatureUnixtime": "number",
                            "metadata": []
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attachments"
        ],
        "operationId": "post-Attachment-create",
        "summary": "Create a new Attachment",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-1d49-48ad-9fa3-21db0b95d0db"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "related_object": {
                    "type": "string"
                  },
                  "related_object_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-46be-44bc-bba4-21db0709e07b"
                  },
                  "attachment_name": {
                    "type": "string"
                  },
                  "file_type": {
                    "type": "string"
                  },
                  "created_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-3b7e-423f-aaca-21db072afdfb"
                  },
                  "timestamp": {
                    "type": "string"
                  },
                  "attachment_source": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "string"
                  },
                  "lng": {
                    "type": "number",
                    "format": "float"
                  },
                  "lat": {
                    "type": "number",
                    "format": "float"
                  },
                  "photo_width": {
                    "type": "number",
                    "description": "(Read-only)"
                  },
                  "photo_height": {
                    "type": "number",
                    "description": "(Read-only)"
                  },
                  "extracted_info": {
                    "type": "string"
                  },
                  "is_favourite": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "\n\nValid values are [0,1]"
                  },
                  "class_name": {
                    "type": "string",
                    "description": "(Read-only)"
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "signature_data": {
                    "type": "object",
                    "description": "(Read-only)",
                    "properties": {
                      "templateSupportsSignature": {
                        "type": "boolean",
                        "description": "True if the template from which this document was produced supports signing"
                      },
                      "documentSnapshotUUID": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The template mergefield snapshot which captured the unsigned document state"
                      },
                      "documentSnapshotExpiresUnixtime": {
                        "type": "number",
                        "description": "The unixtime at which the snapshot expires"
                      },
                      "signedDocumentAttachmentUUID": {
                        "type": "string",
                        "format": "uuid",
                        "description": "If a signed version of this document exists, references the UUID of the attachment"
                      },
                      "unsignedDocumentAttachmentUUID": {
                        "type": "string",
                        "format": "uuid",
                        "description": "References the UUID of the unsigned version of this document"
                      },
                      "signatureDetails": {
                        "type": "object",
                        "properties": {
                          "signatureText": {
                            "type": "string",
                            "description": "Text entered by the signer as the electronic representation of thier signature"
                          },
                          "signatureUnixtime": {
                            "type": "number",
                            "description": "Unixtime at which the document was signed"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "Optional additional data regarding the signature event"
                          }
                        },
                        "required": [
                          "signatureText",
                          "signatureUnixtime"
                        ]
                      }
                    },
                    "required": [
                      "templateSupportsSignature"
                    ]
                  }
                }
              }
            }
          },
          "description": "Attachment record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Attachment record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/attachment/{uuid}.json": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "operationId": "get-Attachment-single",
        "summary": "Retrieve an Attachment",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Attachment",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-1d49-48ad-9fa3-21db0b95d0db"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "related_object": {
                      "type": "string"
                    },
                    "related_object_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-46be-44bc-bba4-21db0709e07b"
                    },
                    "attachment_name": {
                      "type": "string"
                    },
                    "file_type": {
                      "type": "string"
                    },
                    "created_by_staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-3b7e-423f-aaca-21db072afdfb"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "attachment_source": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "string"
                    },
                    "lng": {
                      "type": "number",
                      "format": "float"
                    },
                    "lat": {
                      "type": "number",
                      "format": "float"
                    },
                    "photo_width": {
                      "type": "number",
                      "description": "(Read-only)"
                    },
                    "photo_height": {
                      "type": "number",
                      "description": "(Read-only)"
                    },
                    "extracted_info": {
                      "type": "string"
                    },
                    "is_favourite": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "description": "\n\nValid values are [0,1]"
                    },
                    "class_name": {
                      "type": "string",
                      "description": "(Read-only)"
                    },
                    "metadata": {
                      "type": "object",
                      "additionalProperties": true
                    },
                    "signature_data": {
                      "type": "object",
                      "description": "(Read-only)",
                      "properties": {
                        "templateSupportsSignature": {
                          "type": "boolean",
                          "description": "True if the template from which this document was produced supports signing"
                        },
                        "documentSnapshotUUID": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The template mergefield snapshot which captured the unsigned document state"
                        },
                        "documentSnapshotExpiresUnixtime": {
                          "type": "number",
                          "description": "The unixtime at which the snapshot expires"
                        },
                        "signedDocumentAttachmentUUID": {
                          "type": "string",
                          "format": "uuid",
                          "description": "If a signed version of this document exists, references the UUID of the attachment"
                        },
                        "unsignedDocumentAttachmentUUID": {
                          "type": "string",
                          "format": "uuid",
                          "description": "References the UUID of the unsigned version of this document"
                        },
                        "signatureDetails": {
                          "type": "object",
                          "properties": {
                            "signatureText": {
                              "type": "string",
                              "description": "Text entered by the signer as the electronic representation of thier signature"
                            },
                            "signatureUnixtime": {
                              "type": "number",
                              "description": "Unixtime at which the document was signed"
                            },
                            "metadata": {
                              "type": "object",
                              "description": "Optional additional data regarding the signature event"
                            }
                          },
                          "required": [
                            "signatureText",
                            "signatureUnixtime"
                          ]
                        }
                      },
                      "required": [
                        "templateSupportsSignature"
                      ]
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-205b-4b83-b036-21db0e7a2d0b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "related_object": "string",
                      "related_object_uuid": "123e4567-9b81-497d-a203-21db03731f1b",
                      "attachment_name": "string",
                      "file_type": "string",
                      "created_by_staff_uuid": "123e4567-7df3-4912-96b7-21db01d1c5bb",
                      "timestamp": "string",
                      "attachment_source": "string",
                      "tags": "string",
                      "lng": "number",
                      "lat": "number",
                      "photo_width": "number",
                      "photo_height": "number",
                      "extracted_info": "string",
                      "is_favourite": "number",
                      "class_name": "string",
                      "metadata": [],
                      "signature_data": {
                        "templateSupportsSignature": "string",
                        "documentSnapshotUUID": "string",
                        "documentSnapshotExpiresUnixtime": "number",
                        "signedDocumentAttachmentUUID": "string",
                        "unsignedDocumentAttachmentUUID": "string",
                        "signatureDetails": {
                          "signatureText": "string",
                          "signatureUnixtime": "number",
                          "metadata": []
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attachments"
        ],
        "operationId": "post-Attachment-single",
        "summary": "Update an Attachment",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Attachment",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-1d49-48ad-9fa3-21db0b95d0db"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "related_object": {
                    "type": "string"
                  },
                  "related_object_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-46be-44bc-bba4-21db0709e07b"
                  },
                  "attachment_name": {
                    "type": "string"
                  },
                  "file_type": {
                    "type": "string"
                  },
                  "created_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-3b7e-423f-aaca-21db072afdfb"
                  },
                  "timestamp": {
                    "type": "string"
                  },
                  "attachment_source": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "string"
                  },
                  "lng": {
                    "type": "number",
                    "format": "float"
                  },
                  "lat": {
                    "type": "number",
                    "format": "float"
                  },
                  "photo_width": {
                    "type": "number",
                    "description": "(Read-only)"
                  },
                  "photo_height": {
                    "type": "number",
                    "description": "(Read-only)"
                  },
                  "extracted_info": {
                    "type": "string"
                  },
                  "is_favourite": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "\n\nValid values are [0,1]"
                  },
                  "class_name": {
                    "type": "string",
                    "description": "(Read-only)"
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "signature_data": {
                    "type": "object",
                    "description": "(Read-only)",
                    "properties": {
                      "templateSupportsSignature": {
                        "type": "boolean",
                        "description": "True if the template from which this document was produced supports signing"
                      },
                      "documentSnapshotUUID": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The template mergefield snapshot which captured the unsigned document state"
                      },
                      "documentSnapshotExpiresUnixtime": {
                        "type": "number",
                        "description": "The unixtime at which the snapshot expires"
                      },
                      "signedDocumentAttachmentUUID": {
                        "type": "string",
                        "format": "uuid",
                        "description": "If a signed version of this document exists, references the UUID of the attachment"
                      },
                      "unsignedDocumentAttachmentUUID": {
                        "type": "string",
                        "format": "uuid",
                        "description": "References the UUID of the unsigned version of this document"
                      },
                      "signatureDetails": {
                        "type": "object",
                        "properties": {
                          "signatureText": {
                            "type": "string",
                            "description": "Text entered by the signer as the electronic representation of thier signature"
                          },
                          "signatureUnixtime": {
                            "type": "number",
                            "description": "Unixtime at which the document was signed"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "Optional additional data regarding the signature event"
                          }
                        },
                        "required": [
                          "signatureText",
                          "signatureUnixtime"
                        ]
                      }
                    },
                    "required": [
                      "templateSupportsSignature"
                    ]
                  }
                }
              }
            }
          },
          "description": "Attachment fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Attachments"
        ],
        "operationId": "delete-Attachment-single",
        "summary": "Delete an Attachment",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Attachment",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/badge.json": {
      "get": {
        "tags": [
          "Badges"
        ],
        "operationId": "get-Badge-all",
        "summary": "List all Badges",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_badges**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_badges"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Badges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-616d-4508-add7-21db0f9e408b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "name": {
                        "type": "string",
                        "description": "Badge Name",
                        "maxLength": 50
                      },
                      "automatically_allocated": {
                        "type": "string"
                      },
                      "file_name": {
                        "type": "string"
                      },
                      "regarding_form_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-e7c4-45fd-b4c6-21db004e8bab"
                      },
                      "regarding_asset_type_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-6e9b-41be-ba48-21db0150cd6b"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-c0eb-4f18-9576-21db0d4f3f6b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "name": "string",
                        "automatically_allocated": "string",
                        "file_name": "string",
                        "regarding_form_uuid": "123e4567-dd2c-42f7-8cf1-21db0c44f52b",
                        "regarding_asset_type_uuid": "123e4567-0c5a-465e-8433-21db0b80633b"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Badges"
        ],
        "operationId": "post-Badge-create",
        "summary": "Create a new Badge",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_badges**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_badges"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-616d-4508-add7-21db0f9e408b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string",
                    "description": "Badge Name",
                    "maxLength": 50
                  },
                  "automatically_allocated": {
                    "type": "string"
                  },
                  "file_name": {
                    "type": "string"
                  },
                  "regarding_form_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e7c4-45fd-b4c6-21db004e8bab"
                  },
                  "regarding_asset_type_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-6e9b-41be-ba48-21db0150cd6b"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Badge record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Badge record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/badge/{uuid}.json": {
      "get": {
        "tags": [
          "Badges"
        ],
        "operationId": "get-Badge-single",
        "summary": "Retrieve a Badge",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_badges**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_badges"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Badge",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Badge record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-616d-4508-add7-21db0f9e408b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "name": {
                      "type": "string",
                      "description": "Badge Name",
                      "maxLength": 50
                    },
                    "automatically_allocated": {
                      "type": "string"
                    },
                    "file_name": {
                      "type": "string"
                    },
                    "regarding_form_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-e7c4-45fd-b4c6-21db004e8bab"
                    },
                    "regarding_asset_type_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-6e9b-41be-ba48-21db0150cd6b"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-a03c-4728-9c55-21db0c4f284b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "name": "string",
                      "automatically_allocated": "string",
                      "file_name": "string",
                      "regarding_form_uuid": "123e4567-03fe-4a3c-9dd7-21db063d532b",
                      "regarding_asset_type_uuid": "123e4567-61a3-4b6b-9920-21db0413436b"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Badges"
        ],
        "operationId": "post-Badge-single",
        "summary": "Update a Badge",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Badge",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-616d-4508-add7-21db0f9e408b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string",
                    "description": "Badge Name",
                    "maxLength": 50
                  },
                  "automatically_allocated": {
                    "type": "string"
                  },
                  "file_name": {
                    "type": "string"
                  },
                  "regarding_form_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e7c4-45fd-b4c6-21db004e8bab"
                  },
                  "regarding_asset_type_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-6e9b-41be-ba48-21db0150cd6b"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Badge fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Badges"
        ],
        "operationId": "delete-Badge-single",
        "summary": "Delete a Badge",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Badge",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Badge successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/category.json": {
      "get": {
        "tags": [
          "Categories"
        ],
        "operationId": "get-Category-all",
        "summary": "List all Categories",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_categories**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_job_categories"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-0cef-48e6-a167-21db07467d0b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "name": {
                        "type": "string"
                      },
                      "colour": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-24cd-461d-971e-21db06104d3b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "name": "string",
                        "colour": "string"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "operationId": "post-Category-create",
        "summary": "Create a new Category",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_categories**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_categories"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-0cef-48e6-a167-21db07467d0b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string"
                  },
                  "colour": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Category record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Category record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/category/{uuid}.json": {
      "get": {
        "tags": [
          "Categories"
        ],
        "operationId": "get-Category-single",
        "summary": "Retrieve a Category",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_categories**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_job_categories"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Category",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-0cef-48e6-a167-21db07467d0b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "name": {
                      "type": "string"
                    },
                    "colour": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-cf0b-41a5-8615-21db01cfd8cb",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "name": "string",
                      "colour": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "operationId": "post-Category-single",
        "summary": "Update a Category",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_categories**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_categories"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Category",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-0cef-48e6-a167-21db07467d0b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string"
                  },
                  "colour": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Category fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "operationId": "delete-Category-single",
        "summary": "Delete a Category",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_categories**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_categories"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Category",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/company.json": {
      "get": {
        "tags": [
          "Clients"
        ],
        "operationId": "get-Company-all",
        "summary": "List all Clients",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_customers**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_customers"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Clients",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-afa7-4fe7-9e76-21db0657c67b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "website": {
                        "type": "string"
                      },
                      "abn_number": {
                        "type": "string"
                      },
                      "is_individual": {
                        "type": "string"
                      },
                      "address_street": {
                        "type": "string",
                        "maxLength": 500
                      },
                      "address_city": {
                        "type": "string"
                      },
                      "address_state": {
                        "type": "string"
                      },
                      "address_postcode": {
                        "type": "string"
                      },
                      "address_country": {
                        "type": "string"
                      },
                      "fax_number": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string",
                        "maxLength": 500
                      },
                      "billing_address": {
                        "type": "string",
                        "maxLength": 500
                      },
                      "badges": {
                        "type": "string"
                      },
                      "tax_rate_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-84a9-4609-bed1-21db0363e31b"
                      },
                      "billing_attention": {
                        "type": "string"
                      },
                      "payment_terms": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-1fd2-416f-babd-21db0c30d44b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "name": "string",
                        "website": "string",
                        "abn_number": "string",
                        "is_individual": "string",
                        "address_street": "string",
                        "address_city": "string",
                        "address_state": "string",
                        "address_postcode": "string",
                        "address_country": "string",
                        "fax_number": "string",
                        "address": "string",
                        "billing_address": "string",
                        "badges": "string",
                        "tax_rate_uuid": "123e4567-3eaa-4360-bd2d-21db0ba15c3b",
                        "billing_attention": "string",
                        "payment_terms": "string"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "operationId": "post-Company-create",
        "summary": "Create a new Client",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customers**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_customers"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-afa7-4fe7-9e76-21db0657c67b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "website": {
                    "type": "string"
                  },
                  "abn_number": {
                    "type": "string"
                  },
                  "is_individual": {
                    "type": "string"
                  },
                  "address_street": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "address_city": {
                    "type": "string"
                  },
                  "address_state": {
                    "type": "string"
                  },
                  "address_postcode": {
                    "type": "string"
                  },
                  "address_country": {
                    "type": "string"
                  },
                  "fax_number": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "billing_address": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "badges": {
                    "type": "string"
                  },
                  "tax_rate_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-84a9-4609-bed1-21db0363e31b"
                  },
                  "billing_attention": {
                    "type": "string"
                  },
                  "payment_terms": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Client record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Client record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/company/{uuid}.json": {
      "get": {
        "tags": [
          "Clients"
        ],
        "operationId": "get-Company-single",
        "summary": "Retrieve a Client",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_customers**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_customers"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Client",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Client record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-afa7-4fe7-9e76-21db0657c67b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "website": {
                      "type": "string"
                    },
                    "abn_number": {
                      "type": "string"
                    },
                    "is_individual": {
                      "type": "string"
                    },
                    "address_street": {
                      "type": "string",
                      "maxLength": 500
                    },
                    "address_city": {
                      "type": "string"
                    },
                    "address_state": {
                      "type": "string"
                    },
                    "address_postcode": {
                      "type": "string"
                    },
                    "address_country": {
                      "type": "string"
                    },
                    "fax_number": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string",
                      "maxLength": 500
                    },
                    "billing_address": {
                      "type": "string",
                      "maxLength": 500
                    },
                    "badges": {
                      "type": "string"
                    },
                    "tax_rate_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-84a9-4609-bed1-21db0363e31b"
                    },
                    "billing_attention": {
                      "type": "string"
                    },
                    "payment_terms": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-da39-450d-8a93-21db0f2e4cdb",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "name": "string",
                      "website": "string",
                      "abn_number": "string",
                      "is_individual": "string",
                      "address_street": "string",
                      "address_city": "string",
                      "address_state": "string",
                      "address_postcode": "string",
                      "address_country": "string",
                      "fax_number": "string",
                      "address": "string",
                      "billing_address": "string",
                      "badges": "string",
                      "tax_rate_uuid": "123e4567-ced4-4154-b539-21db02ac160b",
                      "billing_attention": "string",
                      "payment_terms": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "operationId": "post-Company-single",
        "summary": "Update a Client",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customers**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_customers"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Client",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-afa7-4fe7-9e76-21db0657c67b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "website": {
                    "type": "string"
                  },
                  "abn_number": {
                    "type": "string"
                  },
                  "is_individual": {
                    "type": "string"
                  },
                  "address_street": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "address_city": {
                    "type": "string"
                  },
                  "address_state": {
                    "type": "string"
                  },
                  "address_postcode": {
                    "type": "string"
                  },
                  "address_country": {
                    "type": "string"
                  },
                  "fax_number": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "billing_address": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "badges": {
                    "type": "string"
                  },
                  "tax_rate_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-84a9-4609-bed1-21db0363e31b"
                  },
                  "billing_attention": {
                    "type": "string"
                  },
                  "payment_terms": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Client fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "operationId": "delete-Company-single",
        "summary": "Delete a Client",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customers**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_customers"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Client",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Client successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/companycontact.json": {
      "get": {
        "tags": [
          "Company Contacts"
        ],
        "operationId": "get-CompanyContact-all",
        "summary": "List all Company Contacts",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_customer_contacts**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_customer_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Company Contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-0267-49a6-8504-21db05a64bfb"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "company_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-28c1-47b2-a250-21db0788cd4b"
                      },
                      "first": {
                        "type": "string"
                      },
                      "last": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "mobile": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "type": {
                        "type": "string"
                      },
                      "is_primary_contact": {
                        "type": "string"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-0a0c-4b8f-aade-21db0d871edb",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "company_uuid": "123e4567-fd13-4b49-b9f9-21db06b58d4b",
                        "first": "string",
                        "last": "string",
                        "phone": "string",
                        "mobile": "string",
                        "email": "string",
                        "type": "string",
                        "is_primary_contact": "string"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Company Contacts"
        ],
        "operationId": "post-CompanyContact-create",
        "summary": "Create a new Company Contact",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customer_contacts**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_customer_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-0267-49a6-8504-21db05a64bfb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "company_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-28c1-47b2-a250-21db0788cd4b"
                  },
                  "first": {
                    "type": "string"
                  },
                  "last": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "mobile": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "type": {
                    "type": "string"
                  },
                  "is_primary_contact": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Company Contact record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Company Contact record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/companycontact/{uuid}.json": {
      "get": {
        "tags": [
          "Company Contacts"
        ],
        "operationId": "get-CompanyContact-single",
        "summary": "Retrieve a Company Contact",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_customer_contacts**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_customer_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Company Contact",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Company Contact record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-0267-49a6-8504-21db05a64bfb"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "company_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-28c1-47b2-a250-21db0788cd4b"
                    },
                    "first": {
                      "type": "string"
                    },
                    "last": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "mobile": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "type": {
                      "type": "string"
                    },
                    "is_primary_contact": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-443a-4777-bde6-21db0c29320b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "company_uuid": "123e4567-c66d-459c-a196-21db0cf31ecb",
                      "first": "string",
                      "last": "string",
                      "phone": "string",
                      "mobile": "string",
                      "email": "string",
                      "type": "string",
                      "is_primary_contact": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Company Contacts"
        ],
        "operationId": "post-CompanyContact-single",
        "summary": "Update a Company Contact",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customer_contacts**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_customer_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Company Contact",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-0267-49a6-8504-21db05a64bfb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "company_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-28c1-47b2-a250-21db0788cd4b"
                  },
                  "first": {
                    "type": "string"
                  },
                  "last": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "mobile": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "type": {
                    "type": "string"
                  },
                  "is_primary_contact": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Company Contact fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Company Contacts"
        ],
        "operationId": "delete-CompanyContact-single",
        "summary": "Delete a Company Contact",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customer_contacts**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_customer_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Company Contact",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Company Contact successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emailtemplate.json": {
      "get": {
        "tags": [
          "Email Templates"
        ],
        "operationId": "get-EmailTemplate-all",
        "summary": "List all Email Templates",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Email Templates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-6962-4602-966e-21db00a6b57b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 50
                      },
                      "subject": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "message": {
                        "type": "string",
                        "maxLength": 1000
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-57e2-48a2-8653-21db089e6b6b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "name": "string",
                        "subject": "string",
                        "message": "string"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Email Templates"
        ],
        "operationId": "post-EmailTemplate-create",
        "summary": "Create a new Email Template",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-6962-4602-966e-21db00a6b57b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "subject": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "message": {
                    "type": "string",
                    "maxLength": 1000
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Email Template record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Email Template record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emailtemplate/{uuid}.json": {
      "get": {
        "tags": [
          "Email Templates"
        ],
        "operationId": "get-EmailTemplate-single",
        "summary": "Retrieve an Email Template",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Email Template",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email Template record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-6962-4602-966e-21db00a6b57b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 50
                    },
                    "subject": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "message": {
                      "type": "string",
                      "maxLength": 1000
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-6099-46ec-be76-21db04e988fb",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "name": "string",
                      "subject": "string",
                      "message": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Email Templates"
        ],
        "operationId": "post-EmailTemplate-single",
        "summary": "Update an Email Template",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Email Template",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-6962-4602-966e-21db00a6b57b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "subject": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "message": {
                    "type": "string",
                    "maxLength": 1000
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Email Template fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Email Templates"
        ],
        "operationId": "delete-EmailTemplate-single",
        "summary": "Delete an Email Template",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Email Template",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email Template successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/feedback.json": {
      "get": {
        "tags": [
          "Feedback"
        ],
        "operationId": "get-Feedback-all",
        "summary": "List all Feedback",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Feedback",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-6cdd-447b-ae0b-21db02182d7b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "timestamp": {
                        "type": "string"
                      },
                      "related_object": {
                        "type": "string"
                      },
                      "related_object_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-8d79-4d4d-8a6b-21db0dedc92b"
                      },
                      "rating": {
                        "type": "string"
                      },
                      "comment": {
                        "type": "string"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-1c61-42dd-92c4-21db0aa30f8b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "timestamp": "string",
                        "related_object": "string",
                        "related_object_uuid": "123e4567-010e-4093-906a-21db0f57c5db",
                        "rating": "string",
                        "comment": "string"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Feedback"
        ],
        "operationId": "post-Feedback-create",
        "summary": "Create a new Feedback",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-6cdd-447b-ae0b-21db02182d7b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "timestamp": {
                    "type": "string"
                  },
                  "related_object": {
                    "type": "string"
                  },
                  "related_object_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-8d79-4d4d-8a6b-21db0dedc92b"
                  },
                  "rating": {
                    "type": "string"
                  },
                  "comment": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Feedback record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Feedback record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/feedback/{uuid}.json": {
      "get": {
        "tags": [
          "Feedback"
        ],
        "operationId": "get-Feedback-single",
        "summary": "Retrieve a Feedback",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Feedback",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-6cdd-447b-ae0b-21db02182d7b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "related_object": {
                      "type": "string"
                    },
                    "related_object_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-8d79-4d4d-8a6b-21db0dedc92b"
                    },
                    "rating": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-68f7-4502-9d5e-21db0182217b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "timestamp": "string",
                      "related_object": "string",
                      "related_object_uuid": "123e4567-b999-4ffc-aed7-21db0bd8ea1b",
                      "rating": "string",
                      "comment": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Feedback"
        ],
        "operationId": "post-Feedback-single",
        "summary": "Update a Feedback",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Feedback",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-6cdd-447b-ae0b-21db02182d7b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "timestamp": {
                    "type": "string"
                  },
                  "related_object": {
                    "type": "string"
                  },
                  "related_object_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-8d79-4d4d-8a6b-21db0dedc92b"
                  },
                  "rating": {
                    "type": "string"
                  },
                  "comment": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Feedback fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Feedback"
        ],
        "operationId": "delete-Feedback-single",
        "summary": "Delete a Feedback",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Feedback",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/form.json": {
      "get": {
        "tags": [
          "Forms"
        ],
        "operationId": "get-Form-all",
        "summary": "List all Forms",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Forms",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-e417-4322-a5db-21db05dc729b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "name": {
                        "type": "string"
                      },
                      "document_template_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-b2a1-4a31-8c2a-21db0c26314b"
                      },
                      "can_be_used_independently": {
                        "type": "string"
                      },
                      "badge_mandatory_state": {
                        "type": "string"
                      },
                      "template_fields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "fieldType": {
                              "type": "string",
                              "enum": [
                                "Text"
                              ]
                            },
                            "value": {
                              "type": "string"
                            },
                            "sortOrder": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "name",
                            "fieldType",
                            "value",
                            "sortOrder"
                          ]
                        },
                        "minItems": 0,
                        "maxItems": 10
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-ee1f-45ee-bbb9-21db0b23844b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "name": "string",
                        "document_template_uuid": "123e4567-d584-4a28-94ea-21db081c6bcb",
                        "can_be_used_independently": "string",
                        "badge_mandatory_state": "string",
                        "template_fields": [
                          {
                            "name": "string",
                            "fieldType": "string",
                            "value": "string",
                            "sortOrder": "string"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Forms"
        ],
        "operationId": "post-Form-create",
        "summary": "Create a new Form",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-e417-4322-a5db-21db05dc729b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string"
                  },
                  "document_template_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-b2a1-4a31-8c2a-21db0c26314b"
                  },
                  "can_be_used_independently": {
                    "type": "string"
                  },
                  "badge_mandatory_state": {
                    "type": "string"
                  },
                  "template_fields": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "fieldType": {
                          "type": "string",
                          "enum": [
                            "Text"
                          ]
                        },
                        "value": {
                          "type": "string"
                        },
                        "sortOrder": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "name",
                        "fieldType",
                        "value",
                        "sortOrder"
                      ]
                    },
                    "minItems": 0,
                    "maxItems": 10
                  }
                }
              }
            }
          },
          "description": "Form record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Form record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/form/{uuid}.json": {
      "get": {
        "tags": [
          "Forms"
        ],
        "operationId": "get-Form-single",
        "summary": "Retrieve a Form",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Form",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-e417-4322-a5db-21db05dc729b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "name": {
                      "type": "string"
                    },
                    "document_template_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-b2a1-4a31-8c2a-21db0c26314b"
                    },
                    "can_be_used_independently": {
                      "type": "string"
                    },
                    "badge_mandatory_state": {
                      "type": "string"
                    },
                    "template_fields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "fieldType": {
                            "type": "string",
                            "enum": [
                              "Text"
                            ]
                          },
                          "value": {
                            "type": "string"
                          },
                          "sortOrder": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "name",
                          "fieldType",
                          "value",
                          "sortOrder"
                        ]
                      },
                      "minItems": 0,
                      "maxItems": 10
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-9935-4bcf-81da-21db094fe30b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "name": "string",
                      "document_template_uuid": "123e4567-08b4-418d-9a78-21db03c56ebb",
                      "can_be_used_independently": "string",
                      "badge_mandatory_state": "string",
                      "template_fields": [
                        {
                          "name": "string",
                          "fieldType": "string",
                          "value": "string",
                          "sortOrder": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Forms"
        ],
        "operationId": "post-Form-single",
        "summary": "Update a Form",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Form",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-e417-4322-a5db-21db05dc729b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string"
                  },
                  "document_template_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-b2a1-4a31-8c2a-21db0c26314b"
                  },
                  "can_be_used_independently": {
                    "type": "string"
                  },
                  "badge_mandatory_state": {
                    "type": "string"
                  },
                  "template_fields": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "fieldType": {
                          "type": "string",
                          "enum": [
                            "Text"
                          ]
                        },
                        "value": {
                          "type": "string"
                        },
                        "sortOrder": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "name",
                        "fieldType",
                        "value",
                        "sortOrder"
                      ]
                    },
                    "minItems": 0,
                    "maxItems": 10
                  }
                }
              }
            }
          },
          "description": "Form fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Forms"
        ],
        "operationId": "delete-Form-single",
        "summary": "Delete a Form",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Form",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/formfield.json": {
      "get": {
        "tags": [
          "Form Fields"
        ],
        "operationId": "get-FormField-all",
        "summary": "List all Form Fields",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Form Fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-302c-4282-8700-21db0d1cf58b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "form_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-5bba-4a01-8532-21db0e34afab"
                      },
                      "name": {
                        "type": "string"
                      },
                      "field_data_json": {
                        "type": "string"
                      },
                      "sort_order": {
                        "type": "string"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-ff1f-4a69-821e-21db080ae4bb",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "form_uuid": "123e4567-b4cb-4358-a1ab-21db017d200b",
                        "name": "string",
                        "field_data_json": "string",
                        "sort_order": "string"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Form Fields"
        ],
        "operationId": "post-FormField-create",
        "summary": "Create a new Form Field",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-302c-4282-8700-21db0d1cf58b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "form_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-5bba-4a01-8532-21db0e34afab"
                  },
                  "name": {
                    "type": "string"
                  },
                  "field_data_json": {
                    "type": "string"
                  },
                  "sort_order": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Form Field record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Form Field record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/formfield/{uuid}.json": {
      "get": {
        "tags": [
          "Form Fields"
        ],
        "operationId": "get-FormField-single",
        "summary": "Retrieve a Form Field",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Form Field",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form Field record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-302c-4282-8700-21db0d1cf58b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "form_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-5bba-4a01-8532-21db0e34afab"
                    },
                    "name": {
                      "type": "string"
                    },
                    "field_data_json": {
                      "type": "string"
                    },
                    "sort_order": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-3dd2-4da8-b998-21db0635c52b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "form_uuid": "123e4567-8901-4fc3-b329-21db0ff5a68b",
                      "name": "string",
                      "field_data_json": "string",
                      "sort_order": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Form Fields"
        ],
        "operationId": "post-FormField-single",
        "summary": "Update a Form Field",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Form Field",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-302c-4282-8700-21db0d1cf58b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "form_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-5bba-4a01-8532-21db0e34afab"
                  },
                  "name": {
                    "type": "string"
                  },
                  "field_data_json": {
                    "type": "string"
                  },
                  "sort_order": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Form Field fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Form Fields"
        ],
        "operationId": "delete-FormField-single",
        "summary": "Delete a Form Field",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Form Field",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form Field successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/formresponse.json": {
      "get": {
        "tags": [
          "Form Responses"
        ],
        "operationId": "get-FormResponse-all",
        "summary": "List all Form Responses",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Form Responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-cd8d-4b1b-99b8-21db0309053b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "form_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-fc29-4d4e-82fd-21db0b08afab"
                      },
                      "staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-8fa0-4598-9f69-21db0b8234db"
                      },
                      "regarding_object": {
                        "type": "string"
                      },
                      "regarding_object_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-310a-4d16-ac03-21db01f038fb"
                      },
                      "field_data": {
                        "type": "string"
                      },
                      "timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "form_by_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-e191-4444-a1d5-21db0e424fbb"
                      },
                      "document_attachment_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-152a-43f6-bfae-21db085b041b"
                      },
                      "asset_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-7077-4fb9-af4d-21db0845693b"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-d408-4081-9b9c-21db0b2f4b9b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "form_uuid": "123e4567-dd89-4164-a926-21db081e94eb",
                        "staff_uuid": "123e4567-2785-49e5-ae4f-21db00f4143b",
                        "regarding_object": "string",
                        "regarding_object_uuid": "123e4567-5be2-477a-9871-21db091cf90b",
                        "field_data": "string",
                        "timestamp": "YYYY-MM-DD HH:MM:SS",
                        "form_by_staff_uuid": "123e4567-79bd-4839-8e7f-21db07eb36cb",
                        "document_attachment_uuid": "123e4567-45df-44b3-9001-21db0c4188fb",
                        "asset_uuid": "123e4567-45f4-4a45-9611-21db0893295b"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Form Responses"
        ],
        "operationId": "post-FormResponse-create",
        "summary": "Create a new Form Response",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-cd8d-4b1b-99b8-21db0309053b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "form_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-fc29-4d4e-82fd-21db0b08afab"
                  },
                  "staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-8fa0-4598-9f69-21db0b8234db"
                  },
                  "regarding_object": {
                    "type": "string"
                  },
                  "regarding_object_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-310a-4d16-ac03-21db01f038fb"
                  },
                  "field_data": {
                    "type": "string"
                  },
                  "timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "form_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e191-4444-a1d5-21db0e424fbb"
                  },
                  "document_attachment_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-152a-43f6-bfae-21db085b041b"
                  },
                  "asset_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-7077-4fb9-af4d-21db0845693b"
                  }
                }
              }
            }
          },
          "description": "Form Response record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Form Response record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/formresponse/{uuid}.json": {
      "get": {
        "tags": [
          "Form Responses"
        ],
        "operationId": "get-FormResponse-single",
        "summary": "Retrieve a Form Response",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Form Response",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form Response record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-cd8d-4b1b-99b8-21db0309053b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "form_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-fc29-4d4e-82fd-21db0b08afab"
                    },
                    "staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-8fa0-4598-9f69-21db0b8234db"
                    },
                    "regarding_object": {
                      "type": "string"
                    },
                    "regarding_object_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-310a-4d16-ac03-21db01f038fb"
                    },
                    "field_data": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "form_by_staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-e191-4444-a1d5-21db0e424fbb"
                    },
                    "document_attachment_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-152a-43f6-bfae-21db085b041b"
                    },
                    "asset_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-7077-4fb9-af4d-21db0845693b"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-0112-44e7-9233-21db0973142b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "form_uuid": "123e4567-3b87-4725-a6c9-21db072c43cb",
                      "staff_uuid": "123e4567-c623-4683-bb90-21db0293f33b",
                      "regarding_object": "string",
                      "regarding_object_uuid": "123e4567-2d85-4870-a50c-21db05a54c3b",
                      "field_data": "string",
                      "timestamp": "YYYY-MM-DD HH:MM:SS",
                      "form_by_staff_uuid": "123e4567-1705-4d38-82e5-21db088a699b",
                      "document_attachment_uuid": "123e4567-6d37-4683-b4b5-21db04dff49b",
                      "asset_uuid": "123e4567-097b-4893-9295-21db0de6c48b"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Form Responses"
        ],
        "operationId": "post-FormResponse-single",
        "summary": "Update a Form Response",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Form Response",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-cd8d-4b1b-99b8-21db0309053b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "form_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-fc29-4d4e-82fd-21db0b08afab"
                  },
                  "staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-8fa0-4598-9f69-21db0b8234db"
                  },
                  "regarding_object": {
                    "type": "string"
                  },
                  "regarding_object_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-310a-4d16-ac03-21db01f038fb"
                  },
                  "field_data": {
                    "type": "string"
                  },
                  "timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "form_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e191-4444-a1d5-21db0e424fbb"
                  },
                  "document_attachment_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-152a-43f6-bfae-21db085b041b"
                  },
                  "asset_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-7077-4fb9-af4d-21db0845693b"
                  }
                }
              }
            }
          },
          "description": "Form Response fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Form Responses"
        ],
        "operationId": "delete-FormResponse-single",
        "summary": "Delete a Form Response",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Form Response",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form Response successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/job.json": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "operationId": "get-Job-all",
        "summary": "List all Jobs",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_jobs**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_jobs"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Jobs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-e539-40c9-9ea4-21db0343830b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "created_by_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-a9e9-4e78-8910-21db08c02ecb"
                      },
                      "date": {
                        "type": "string",
                        "example": "YYYY-MM-DD"
                      },
                      "company_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-41fc-4af5-aca5-21db07bc319b"
                      },
                      "job_address": {
                        "type": "string",
                        "maxLength": 500
                      },
                      "billing_address": {
                        "type": "string",
                        "maxLength": 500
                      },
                      "status": {
                        "type": "string"
                      },
                      "job_description": {
                        "type": "string"
                      },
                      "work_done_description": {
                        "type": "string"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float"
                      },
                      "lat": {
                        "type": "number",
                        "format": "float"
                      },
                      "generated_job_id": {
                        "type": "string",
                        "description": "(Read-only)"
                      },
                      "payment_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "payment_actioned_by_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-a547-45ae-a094-21db03087d5b"
                      },
                      "payment_method": {
                        "type": "string"
                      },
                      "payment_amount": {
                        "type": "string"
                      },
                      "total_invoice_amount": {
                        "type": "string"
                      },
                      "category_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-af18-4701-8d91-21db0f31e1db"
                      },
                      "payment_note": {
                        "type": "string"
                      },
                      "geo_is_valid": {
                        "type": "string"
                      },
                      "purchase_order_number": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "invoice_sent": {
                        "type": "string"
                      },
                      "invoice_sent_stamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "ready_to_invoice": {
                        "type": "string"
                      },
                      "ready_to_invoice_stamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "payment_processed": {
                        "type": "string"
                      },
                      "payment_processed_stamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "geo_country": {
                        "type": "string"
                      },
                      "geo_postcode": {
                        "type": "string"
                      },
                      "geo_state": {
                        "type": "string"
                      },
                      "geo_city": {
                        "type": "string"
                      },
                      "geo_street": {
                        "type": "string"
                      },
                      "geo_number": {
                        "type": "string"
                      },
                      "queue_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-1500-485b-93bb-21db07f210eb"
                      },
                      "queue_expiry_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "queue_assigned_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-f641-4a0e-961e-21db0624c4fb"
                      },
                      "payment_received": {
                        "type": "string"
                      },
                      "payment_received_stamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "badges": {
                        "type": "string"
                      },
                      "quote_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "quote_sent": {
                        "type": "number",
                        "description": "(Read-only). \n\nValid values are [0,1]",
                        "enum": [
                          0,
                          1
                        ]
                      },
                      "quote_sent_stamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "description": "(Read-only)"
                      },
                      "work_order_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "completion_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "completion_actioned_by_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-15c5-4ea0-8a01-21db005dfc8b"
                      },
                      "unsuccessful_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "job_is_scheduled_until_stamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "active_network_request_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-7620-454e-95ca-21db008d0cab"
                      },
                      "related_knowledge_articles": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "knowledge_article_uuid": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "relevance": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "knowledge_article_uuid",
                            "relevance"
                          ]
                        }
                      }
                    },
                    "required": [
                      "status"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-febf-4415-a388-21db06e69dbb",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "created_by_staff_uuid": "123e4567-2eb2-4ffc-944b-21db0135321b",
                        "date": "YYYY-MM-DD",
                        "company_uuid": "123e4567-e56f-43f6-a6c3-21db0f1da3eb",
                        "job_address": "string",
                        "billing_address": "string",
                        "status": "string",
                        "job_description": "string",
                        "work_done_description": "string",
                        "lng": "number",
                        "lat": "number",
                        "generated_job_id": "string",
                        "payment_date": "YYYY-MM-DD HH:MM:SS",
                        "payment_actioned_by_uuid": "123e4567-dc20-41cc-b5d1-21db03c16d3b",
                        "payment_method": "string",
                        "payment_amount": "string",
                        "total_invoice_amount": "string",
                        "category_uuid": "123e4567-b002-44fa-9dd0-21db056cd4fb",
                        "payment_note": "string",
                        "geo_is_valid": "string",
                        "purchase_order_number": "string",
                        "invoice_sent": "string",
                        "invoice_sent_stamp": "YYYY-MM-DD HH:MM:SS",
                        "ready_to_invoice": "string",
                        "ready_to_invoice_stamp": "YYYY-MM-DD HH:MM:SS",
                        "payment_processed": "string",
                        "payment_processed_stamp": "YYYY-MM-DD HH:MM:SS",
                        "geo_country": "string",
                        "geo_postcode": "string",
                        "geo_state": "string",
                        "geo_city": "string",
                        "geo_street": "string",
                        "geo_number": "string",
                        "queue_uuid": "123e4567-6c4b-459f-bc4f-21db035d0a0b",
                        "queue_expiry_date": "YYYY-MM-DD HH:MM:SS",
                        "queue_assigned_staff_uuid": "123e4567-bac2-4113-8d08-21db04d27b8b",
                        "payment_received": "string",
                        "payment_received_stamp": "YYYY-MM-DD HH:MM:SS",
                        "badges": "string",
                        "quote_date": "YYYY-MM-DD HH:MM:SS",
                        "quote_sent": "number",
                        "quote_sent_stamp": "YYYY-MM-DD HH:MM:SS",
                        "work_order_date": "YYYY-MM-DD HH:MM:SS",
                        "completion_date": "YYYY-MM-DD HH:MM:SS",
                        "completion_actioned_by_uuid": "123e4567-507b-429b-bce7-21db069cb9fb",
                        "unsuccessful_date": "YYYY-MM-DD HH:MM:SS",
                        "job_is_scheduled_until_stamp": "YYYY-MM-DD HH:MM:SS",
                        "active_network_request_uuid": "123e4567-0b1d-4943-a265-21db0a03846b",
                        "related_knowledge_articles": [
                          {
                            "knowledge_article_uuid": "string",
                            "relevance": "number"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Jobs"
        ],
        "operationId": "post-Job-create",
        "summary": "Create a new Job",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **create_jobs**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "create_jobs"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-e539-40c9-9ea4-21db0343830b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "created_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-a9e9-4e78-8910-21db08c02ecb"
                  },
                  "date": {
                    "type": "string",
                    "example": "YYYY-MM-DD"
                  },
                  "company_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-41fc-4af5-aca5-21db07bc319b"
                  },
                  "job_address": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "billing_address": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "status": {
                    "type": "string"
                  },
                  "job_description": {
                    "type": "string"
                  },
                  "work_done_description": {
                    "type": "string"
                  },
                  "lng": {
                    "type": "number",
                    "format": "float"
                  },
                  "lat": {
                    "type": "number",
                    "format": "float"
                  },
                  "generated_job_id": {
                    "type": "string",
                    "description": "(Read-only)"
                  },
                  "payment_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "payment_actioned_by_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-a547-45ae-a094-21db03087d5b"
                  },
                  "payment_method": {
                    "type": "string"
                  },
                  "payment_amount": {
                    "type": "string"
                  },
                  "total_invoice_amount": {
                    "type": "string"
                  },
                  "category_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-af18-4701-8d91-21db0f31e1db"
                  },
                  "payment_note": {
                    "type": "string"
                  },
                  "geo_is_valid": {
                    "type": "string"
                  },
                  "purchase_order_number": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "invoice_sent": {
                    "type": "string"
                  },
                  "invoice_sent_stamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "ready_to_invoice": {
                    "type": "string"
                  },
                  "ready_to_invoice_stamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "payment_processed": {
                    "type": "string"
                  },
                  "payment_processed_stamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "geo_country": {
                    "type": "string"
                  },
                  "geo_postcode": {
                    "type": "string"
                  },
                  "geo_state": {
                    "type": "string"
                  },
                  "geo_city": {
                    "type": "string"
                  },
                  "geo_street": {
                    "type": "string"
                  },
                  "geo_number": {
                    "type": "string"
                  },
                  "queue_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-1500-485b-93bb-21db07f210eb"
                  },
                  "queue_expiry_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "queue_assigned_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-f641-4a0e-961e-21db0624c4fb"
                  },
                  "payment_received": {
                    "type": "string"
                  },
                  "payment_received_stamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "badges": {
                    "type": "string"
                  },
                  "quote_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "quote_sent": {
                    "type": "number",
                    "description": "(Read-only). \n\nValid values are [0,1]",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "quote_sent_stamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "description": "(Read-only)"
                  },
                  "work_order_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "completion_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "completion_actioned_by_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-15c5-4ea0-8a01-21db005dfc8b"
                  },
                  "unsuccessful_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "job_is_scheduled_until_stamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "active_network_request_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-7620-454e-95ca-21db008d0cab"
                  },
                  "related_knowledge_articles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "knowledge_article_uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "relevance": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "knowledge_article_uuid",
                        "relevance"
                      ]
                    }
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          },
          "description": "Job record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Job record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/job/{uuid}.json": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "operationId": "get-Job-single",
        "summary": "Retrieve a Job",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_jobs**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_jobs"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-e539-40c9-9ea4-21db0343830b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "created_by_staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-a9e9-4e78-8910-21db08c02ecb"
                    },
                    "date": {
                      "type": "string",
                      "example": "YYYY-MM-DD"
                    },
                    "company_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-41fc-4af5-aca5-21db07bc319b"
                    },
                    "job_address": {
                      "type": "string",
                      "maxLength": 500
                    },
                    "billing_address": {
                      "type": "string",
                      "maxLength": 500
                    },
                    "status": {
                      "type": "string"
                    },
                    "job_description": {
                      "type": "string"
                    },
                    "work_done_description": {
                      "type": "string"
                    },
                    "lng": {
                      "type": "number",
                      "format": "float"
                    },
                    "lat": {
                      "type": "number",
                      "format": "float"
                    },
                    "generated_job_id": {
                      "type": "string",
                      "description": "(Read-only)"
                    },
                    "payment_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "payment_actioned_by_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-a547-45ae-a094-21db03087d5b"
                    },
                    "payment_method": {
                      "type": "string"
                    },
                    "payment_amount": {
                      "type": "string"
                    },
                    "total_invoice_amount": {
                      "type": "string"
                    },
                    "category_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-af18-4701-8d91-21db0f31e1db"
                    },
                    "payment_note": {
                      "type": "string"
                    },
                    "geo_is_valid": {
                      "type": "string"
                    },
                    "purchase_order_number": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "invoice_sent": {
                      "type": "string"
                    },
                    "invoice_sent_stamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "ready_to_invoice": {
                      "type": "string"
                    },
                    "ready_to_invoice_stamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "payment_processed": {
                      "type": "string"
                    },
                    "payment_processed_stamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "geo_country": {
                      "type": "string"
                    },
                    "geo_postcode": {
                      "type": "string"
                    },
                    "geo_state": {
                      "type": "string"
                    },
                    "geo_city": {
                      "type": "string"
                    },
                    "geo_street": {
                      "type": "string"
                    },
                    "geo_number": {
                      "type": "string"
                    },
                    "queue_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-1500-485b-93bb-21db07f210eb"
                    },
                    "queue_expiry_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "queue_assigned_staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-f641-4a0e-961e-21db0624c4fb"
                    },
                    "payment_received": {
                      "type": "string"
                    },
                    "payment_received_stamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "badges": {
                      "type": "string"
                    },
                    "quote_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "quote_sent": {
                      "type": "number",
                      "description": "(Read-only). \n\nValid values are [0,1]",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "quote_sent_stamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "description": "(Read-only)"
                    },
                    "work_order_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "completion_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "completion_actioned_by_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-15c5-4ea0-8a01-21db005dfc8b"
                    },
                    "unsuccessful_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "job_is_scheduled_until_stamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "active_network_request_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-7620-454e-95ca-21db008d0cab"
                    },
                    "related_knowledge_articles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "knowledge_article_uuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "relevance": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "knowledge_article_uuid",
                          "relevance"
                        ]
                      }
                    }
                  },
                  "required": [
                    "status"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-0b89-4185-8c31-21db0620b8ab",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "created_by_staff_uuid": "123e4567-6506-46d0-8e8e-21db0084299b",
                      "date": "YYYY-MM-DD",
                      "company_uuid": "123e4567-59e9-444b-8c00-21db04989b5b",
                      "job_address": "string",
                      "billing_address": "string",
                      "status": "string",
                      "job_description": "string",
                      "work_done_description": "string",
                      "lng": "number",
                      "lat": "number",
                      "generated_job_id": "string",
                      "payment_date": "YYYY-MM-DD HH:MM:SS",
                      "payment_actioned_by_uuid": "123e4567-e563-4c88-9f83-21db0579f3db",
                      "payment_method": "string",
                      "payment_amount": "string",
                      "total_invoice_amount": "string",
                      "category_uuid": "123e4567-65be-49f8-aaf8-21db0e33cd7b",
                      "payment_note": "string",
                      "geo_is_valid": "string",
                      "purchase_order_number": "string",
                      "invoice_sent": "string",
                      "invoice_sent_stamp": "YYYY-MM-DD HH:MM:SS",
                      "ready_to_invoice": "string",
                      "ready_to_invoice_stamp": "YYYY-MM-DD HH:MM:SS",
                      "payment_processed": "string",
                      "payment_processed_stamp": "YYYY-MM-DD HH:MM:SS",
                      "geo_country": "string",
                      "geo_postcode": "string",
                      "geo_state": "string",
                      "geo_city": "string",
                      "geo_street": "string",
                      "geo_number": "string",
                      "queue_uuid": "123e4567-aaa4-4ff6-b633-21db0c612e1b",
                      "queue_expiry_date": "YYYY-MM-DD HH:MM:SS",
                      "queue_assigned_staff_uuid": "123e4567-edf5-463c-a581-21db04f6517b",
                      "payment_received": "string",
                      "payment_received_stamp": "YYYY-MM-DD HH:MM:SS",
                      "badges": "string",
                      "quote_date": "YYYY-MM-DD HH:MM:SS",
                      "quote_sent": "number",
                      "quote_sent_stamp": "YYYY-MM-DD HH:MM:SS",
                      "work_order_date": "YYYY-MM-DD HH:MM:SS",
                      "completion_date": "YYYY-MM-DD HH:MM:SS",
                      "completion_actioned_by_uuid": "123e4567-e9b8-4281-a6d6-21db0b238e9b",
                      "unsuccessful_date": "YYYY-MM-DD HH:MM:SS",
                      "job_is_scheduled_until_stamp": "YYYY-MM-DD HH:MM:SS",
                      "active_network_request_uuid": "123e4567-65dc-4a78-ba3b-21db03d7bf4b",
                      "related_knowledge_articles": [
                        {
                          "knowledge_article_uuid": "string",
                          "relevance": "number"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Jobs"
        ],
        "operationId": "post-Job-single",
        "summary": "Update a Job",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_jobs**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_jobs"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-e539-40c9-9ea4-21db0343830b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "created_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-a9e9-4e78-8910-21db08c02ecb"
                  },
                  "date": {
                    "type": "string",
                    "example": "YYYY-MM-DD"
                  },
                  "company_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-41fc-4af5-aca5-21db07bc319b"
                  },
                  "job_address": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "billing_address": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "status": {
                    "type": "string"
                  },
                  "job_description": {
                    "type": "string"
                  },
                  "work_done_description": {
                    "type": "string"
                  },
                  "lng": {
                    "type": "number",
                    "format": "float"
                  },
                  "lat": {
                    "type": "number",
                    "format": "float"
                  },
                  "generated_job_id": {
                    "type": "string",
                    "description": "(Read-only)"
                  },
                  "payment_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "payment_actioned_by_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-a547-45ae-a094-21db03087d5b"
                  },
                  "payment_method": {
                    "type": "string"
                  },
                  "payment_amount": {
                    "type": "string"
                  },
                  "total_invoice_amount": {
                    "type": "string"
                  },
                  "category_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-af18-4701-8d91-21db0f31e1db"
                  },
                  "payment_note": {
                    "type": "string"
                  },
                  "geo_is_valid": {
                    "type": "string"
                  },
                  "purchase_order_number": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "invoice_sent": {
                    "type": "string"
                  },
                  "invoice_sent_stamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "ready_to_invoice": {
                    "type": "string"
                  },
                  "ready_to_invoice_stamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "payment_processed": {
                    "type": "string"
                  },
                  "payment_processed_stamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "geo_country": {
                    "type": "string"
                  },
                  "geo_postcode": {
                    "type": "string"
                  },
                  "geo_state": {
                    "type": "string"
                  },
                  "geo_city": {
                    "type": "string"
                  },
                  "geo_street": {
                    "type": "string"
                  },
                  "geo_number": {
                    "type": "string"
                  },
                  "queue_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-1500-485b-93bb-21db07f210eb"
                  },
                  "queue_expiry_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "queue_assigned_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-f641-4a0e-961e-21db0624c4fb"
                  },
                  "payment_received": {
                    "type": "string"
                  },
                  "payment_received_stamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "badges": {
                    "type": "string"
                  },
                  "quote_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "quote_sent": {
                    "type": "number",
                    "description": "(Read-only). \n\nValid values are [0,1]",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "quote_sent_stamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "description": "(Read-only)"
                  },
                  "work_order_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "completion_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "completion_actioned_by_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-15c5-4ea0-8a01-21db005dfc8b"
                  },
                  "unsuccessful_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "job_is_scheduled_until_stamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "active_network_request_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-7620-454e-95ca-21db008d0cab"
                  },
                  "related_knowledge_articles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "knowledge_article_uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "relevance": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "knowledge_article_uuid",
                        "relevance"
                      ]
                    }
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          },
          "description": "Job fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Jobs"
        ],
        "operationId": "delete-Job-single",
        "summary": "Delete a Job",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_jobs**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_jobs"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobactivity.json": {
      "get": {
        "tags": [
          "Job Activities"
        ],
        "operationId": "get-JobActivity-all",
        "summary": "List all Job Activities",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_schedule**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_schedule"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Job Activities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-6070-4258-bd53-21db0f0c845b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "job_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-63cf-4527-9f56-21db088bd0ab"
                      },
                      "staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-5e9d-4161-b1f3-21db086bd9db"
                      },
                      "start_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "end_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "activity_was_scheduled": {
                        "type": "string"
                      },
                      "activity_was_recorded": {
                        "type": "string"
                      },
                      "activity_was_automated": {
                        "type": "string"
                      },
                      "has_been_opened": {
                        "type": "string"
                      },
                      "has_been_opened_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "travel_time_in_seconds": {
                        "type": "string"
                      },
                      "travel_distance_in_meters": {
                        "type": "string"
                      },
                      "allocated_by_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-7276-4c2d-b206-21db0bfddddb"
                      },
                      "allocated_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "material_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-8484-4411-868b-21db075c5e6b"
                      },
                      "edit_by_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-6c64-4a73-bce1-21db0729220b",
                        "readOnly": true,
                        "description": "Staff Member who last modified record"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-a695-4b5a-aa8e-21db037c628b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "job_uuid": "123e4567-4b61-4d5b-813e-21db0a0aa9eb",
                        "staff_uuid": "123e4567-3555-4978-addb-21db06aceaeb",
                        "start_date": "YYYY-MM-DD HH:MM:SS",
                        "end_date": "YYYY-MM-DD HH:MM:SS",
                        "activity_was_scheduled": "string",
                        "activity_was_recorded": "string",
                        "activity_was_automated": "string",
                        "has_been_opened": "string",
                        "has_been_opened_timestamp": "YYYY-MM-DD HH:MM:SS",
                        "travel_time_in_seconds": "string",
                        "travel_distance_in_meters": "string",
                        "allocated_by_staff_uuid": "123e4567-171d-4d85-9dd5-21db06c47e2b",
                        "allocated_timestamp": "YYYY-MM-DD HH:MM:SS",
                        "material_uuid": "123e4567-b408-4fc5-89e6-21db03e6cddb",
                        "edit_by_staff_uuid": "123e4567-665a-4880-bd07-21db0d39d2fb"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Activities"
        ],
        "operationId": "post-JobActivity-create",
        "summary": "Create a new Job Activity",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_schedule"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-6070-4258-bd53-21db0f0c845b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-63cf-4527-9f56-21db088bd0ab"
                  },
                  "staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-5e9d-4161-b1f3-21db086bd9db"
                  },
                  "start_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "end_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "activity_was_scheduled": {
                    "type": "string"
                  },
                  "activity_was_recorded": {
                    "type": "string"
                  },
                  "activity_was_automated": {
                    "type": "string"
                  },
                  "has_been_opened": {
                    "type": "string"
                  },
                  "has_been_opened_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "travel_time_in_seconds": {
                    "type": "string"
                  },
                  "travel_distance_in_meters": {
                    "type": "string"
                  },
                  "allocated_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-7276-4c2d-b206-21db0bfddddb"
                  },
                  "allocated_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "material_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-8484-4411-868b-21db075c5e6b"
                  },
                  "edit_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-6c64-4a73-bce1-21db0729220b",
                    "readOnly": true,
                    "description": "Staff Member who last modified record"
                  }
                }
              }
            }
          },
          "description": "Job Activity record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Job Activity record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobactivity/{uuid}.json": {
      "get": {
        "tags": [
          "Job Activities"
        ],
        "operationId": "get-JobActivity-single",
        "summary": "Retrieve a Job Activity",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_schedule**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_schedule"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Activity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job Activity record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-6070-4258-bd53-21db0f0c845b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "job_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-63cf-4527-9f56-21db088bd0ab"
                    },
                    "staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-5e9d-4161-b1f3-21db086bd9db"
                    },
                    "start_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "end_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "activity_was_scheduled": {
                      "type": "string"
                    },
                    "activity_was_recorded": {
                      "type": "string"
                    },
                    "activity_was_automated": {
                      "type": "string"
                    },
                    "has_been_opened": {
                      "type": "string"
                    },
                    "has_been_opened_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "travel_time_in_seconds": {
                      "type": "string"
                    },
                    "travel_distance_in_meters": {
                      "type": "string"
                    },
                    "allocated_by_staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-7276-4c2d-b206-21db0bfddddb"
                    },
                    "allocated_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "material_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-8484-4411-868b-21db075c5e6b"
                    },
                    "edit_by_staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-6c64-4a73-bce1-21db0729220b",
                      "readOnly": true,
                      "description": "Staff Member who last modified record"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-ac2a-44a1-9afc-21db0d99db8b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "job_uuid": "123e4567-f83b-42e8-8533-21db0606781b",
                      "staff_uuid": "123e4567-b66d-439b-ab92-21db0cbae4eb",
                      "start_date": "YYYY-MM-DD HH:MM:SS",
                      "end_date": "YYYY-MM-DD HH:MM:SS",
                      "activity_was_scheduled": "string",
                      "activity_was_recorded": "string",
                      "activity_was_automated": "string",
                      "has_been_opened": "string",
                      "has_been_opened_timestamp": "YYYY-MM-DD HH:MM:SS",
                      "travel_time_in_seconds": "string",
                      "travel_distance_in_meters": "string",
                      "allocated_by_staff_uuid": "123e4567-cdee-4389-a849-21db03322cbb",
                      "allocated_timestamp": "YYYY-MM-DD HH:MM:SS",
                      "material_uuid": "123e4567-b499-4854-b652-21db071c50cb",
                      "edit_by_staff_uuid": "123e4567-4190-448c-9acb-21db07dc48fb"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Activities"
        ],
        "operationId": "post-JobActivity-single",
        "summary": "Update a Job Activity",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_schedule"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Activity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-6070-4258-bd53-21db0f0c845b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-63cf-4527-9f56-21db088bd0ab"
                  },
                  "staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-5e9d-4161-b1f3-21db086bd9db"
                  },
                  "start_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "end_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "activity_was_scheduled": {
                    "type": "string"
                  },
                  "activity_was_recorded": {
                    "type": "string"
                  },
                  "activity_was_automated": {
                    "type": "string"
                  },
                  "has_been_opened": {
                    "type": "string"
                  },
                  "has_been_opened_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "travel_time_in_seconds": {
                    "type": "string"
                  },
                  "travel_distance_in_meters": {
                    "type": "string"
                  },
                  "allocated_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-7276-4c2d-b206-21db0bfddddb"
                  },
                  "allocated_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "material_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-8484-4411-868b-21db075c5e6b"
                  },
                  "edit_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-6c64-4a73-bce1-21db0729220b",
                    "readOnly": true,
                    "description": "Staff Member who last modified record"
                  }
                }
              }
            }
          },
          "description": "Job Activity fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Activities"
        ],
        "operationId": "delete-JobActivity-single",
        "summary": "Delete a Job Activity",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_schedule"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Activity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job Activity successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/joballocation.json": {
      "get": {
        "tags": [
          "Job Allocations"
        ],
        "operationId": "get-JobAllocation-all",
        "summary": "List all Job Allocations",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_schedule**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_schedule"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Job Allocations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-6b51-4ec2-a1ac-21db0e0c1efb"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "job_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-6bd2-4182-a569-21db0eb3202b"
                      },
                      "queue_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-b20b-4fa8-917f-21db086b0c4b"
                      },
                      "staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-27f6-4c77-8f39-21db01c8e6eb"
                      },
                      "allocation_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "allocation_window_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-46a9-4c37-abfc-21db06e33b4b"
                      },
                      "allocated_by_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-5787-4324-ae63-21db0c48bb0b"
                      },
                      "allocated_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "expiry_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "read_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "completion_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "estimated_duration": {
                        "type": "string"
                      },
                      "revised_duration": {
                        "type": "string"
                      },
                      "sort_priority": {
                        "type": "string"
                      },
                      "requires_acceptance": {
                        "type": "string"
                      },
                      "acceptance_status": {
                        "type": "string"
                      },
                      "acceptance_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-2ea4-46f9-b7c4-21db0fc623eb",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "job_uuid": "123e4567-dc05-4733-a645-21db075926cb",
                        "queue_uuid": "123e4567-85be-4c5f-ae86-21db093fccdb",
                        "staff_uuid": "123e4567-829f-47f5-abf6-21db0b972d2b",
                        "allocation_date": "YYYY-MM-DD HH:MM:SS",
                        "allocation_window_uuid": "123e4567-03d2-49aa-92a2-21db0c877a6b",
                        "allocated_by_staff_uuid": "123e4567-f664-4af5-95f7-21db0f4d1f4b",
                        "allocated_timestamp": "YYYY-MM-DD HH:MM:SS",
                        "expiry_timestamp": "YYYY-MM-DD HH:MM:SS",
                        "read_timestamp": "YYYY-MM-DD HH:MM:SS",
                        "completion_timestamp": "YYYY-MM-DD HH:MM:SS",
                        "estimated_duration": "string",
                        "revised_duration": "string",
                        "sort_priority": "string",
                        "requires_acceptance": "string",
                        "acceptance_status": "string",
                        "acceptance_timestamp": "YYYY-MM-DD HH:MM:SS"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Allocations"
        ],
        "operationId": "post-JobAllocation-create",
        "summary": "Create a new Job Allocation",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_schedule"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-6b51-4ec2-a1ac-21db0e0c1efb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-6bd2-4182-a569-21db0eb3202b"
                  },
                  "queue_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-b20b-4fa8-917f-21db086b0c4b"
                  },
                  "staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-27f6-4c77-8f39-21db01c8e6eb"
                  },
                  "allocation_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "allocation_window_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-46a9-4c37-abfc-21db06e33b4b"
                  },
                  "allocated_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-5787-4324-ae63-21db0c48bb0b"
                  },
                  "allocated_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "expiry_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "read_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "completion_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "estimated_duration": {
                    "type": "string"
                  },
                  "revised_duration": {
                    "type": "string"
                  },
                  "sort_priority": {
                    "type": "string"
                  },
                  "requires_acceptance": {
                    "type": "string"
                  },
                  "acceptance_status": {
                    "type": "string"
                  },
                  "acceptance_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  }
                }
              }
            }
          },
          "description": "Job Allocation record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Job Allocation record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/joballocation/{uuid}.json": {
      "get": {
        "tags": [
          "Job Allocations"
        ],
        "operationId": "get-JobAllocation-single",
        "summary": "Retrieve a Job Allocation",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_schedule**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_schedule"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Allocation",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job Allocation record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-6b51-4ec2-a1ac-21db0e0c1efb"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "job_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-6bd2-4182-a569-21db0eb3202b"
                    },
                    "queue_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-b20b-4fa8-917f-21db086b0c4b"
                    },
                    "staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-27f6-4c77-8f39-21db01c8e6eb"
                    },
                    "allocation_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "allocation_window_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-46a9-4c37-abfc-21db06e33b4b"
                    },
                    "allocated_by_staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-5787-4324-ae63-21db0c48bb0b"
                    },
                    "allocated_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "expiry_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "read_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "completion_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "estimated_duration": {
                      "type": "string"
                    },
                    "revised_duration": {
                      "type": "string"
                    },
                    "sort_priority": {
                      "type": "string"
                    },
                    "requires_acceptance": {
                      "type": "string"
                    },
                    "acceptance_status": {
                      "type": "string"
                    },
                    "acceptance_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-14db-42e4-9759-21db0463de7b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "job_uuid": "123e4567-ae30-43a2-af85-21db0ccc31db",
                      "queue_uuid": "123e4567-2420-4cec-b0d7-21db04d9f3bb",
                      "staff_uuid": "123e4567-143c-48fe-8e09-21db02b9dcfb",
                      "allocation_date": "YYYY-MM-DD HH:MM:SS",
                      "allocation_window_uuid": "123e4567-b5e2-496d-80ff-21db0d35ec3b",
                      "allocated_by_staff_uuid": "123e4567-a58e-44b1-be1e-21db025e021b",
                      "allocated_timestamp": "YYYY-MM-DD HH:MM:SS",
                      "expiry_timestamp": "YYYY-MM-DD HH:MM:SS",
                      "read_timestamp": "YYYY-MM-DD HH:MM:SS",
                      "completion_timestamp": "YYYY-MM-DD HH:MM:SS",
                      "estimated_duration": "string",
                      "revised_duration": "string",
                      "sort_priority": "string",
                      "requires_acceptance": "string",
                      "acceptance_status": "string",
                      "acceptance_timestamp": "YYYY-MM-DD HH:MM:SS"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Allocations"
        ],
        "operationId": "post-JobAllocation-single",
        "summary": "Update a Job Allocation",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Allocation",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-6b51-4ec2-a1ac-21db0e0c1efb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-6bd2-4182-a569-21db0eb3202b"
                  },
                  "queue_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-b20b-4fa8-917f-21db086b0c4b"
                  },
                  "staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-27f6-4c77-8f39-21db01c8e6eb"
                  },
                  "allocation_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "allocation_window_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-46a9-4c37-abfc-21db06e33b4b"
                  },
                  "allocated_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-5787-4324-ae63-21db0c48bb0b"
                  },
                  "allocated_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "expiry_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "read_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "completion_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "estimated_duration": {
                    "type": "string"
                  },
                  "revised_duration": {
                    "type": "string"
                  },
                  "sort_priority": {
                    "type": "string"
                  },
                  "requires_acceptance": {
                    "type": "string"
                  },
                  "acceptance_status": {
                    "type": "string"
                  },
                  "acceptance_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  }
                }
              }
            }
          },
          "description": "Job Allocation fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Allocations"
        ],
        "operationId": "delete-JobAllocation-single",
        "summary": "Delete a Job Allocation",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Allocation",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job Allocation successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobchecklist.json": {
      "get": {
        "tags": [
          "Job Checklists"
        ],
        "operationId": "get-JobChecklist-all",
        "summary": "List all Job Checklists",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Job Checklists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-72e6-47d1-b2ef-21db0ae2678b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "job_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-c767-4fd5-bcec-21db07cf1b7b"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 256
                      },
                      "section_name": {
                        "type": "string",
                        "maxLength": 256
                      },
                      "item_type": {
                        "type": "string"
                      },
                      "sort_order": {
                        "type": "number"
                      },
                      "completed_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "completed_by_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-a6a9-4ebb-8fce-21db0fdc5f4b"
                      },
                      "completed_during_checkin_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-8c52-4797-9918-21db0c7a9c4b"
                      },
                      "reminder_type": {
                        "type": "string"
                      },
                      "reminder_data": {
                        "type": "object",
                        "properties": {
                          "absoluteDateTime": {
                            "type": "string",
                            "pattern": "^\\d{4}-\\d{2}-\\d{2}\\ \\d{2}:\\d{2}:\\d{2}$"
                          },
                          "relativeDateTime": {
                            "type": "object",
                            "properties": {
                              "baseDate": {
                                "type": "string",
                                "enum": [
                                  "JOB_CREATE_TIME",
                                  "NEXT_BOOKING_TIME"
                                ]
                              },
                              "unit": {
                                "type": "string",
                                "enum": [
                                  "DAY",
                                  "HOUR",
                                  "MINUTE"
                                ]
                              },
                              "quantity": {
                                "type": "integer",
                                "description": "Number of units to add/subtract from base date. Negative quantities mean the reminder occurs before the base date. Reminders scheduled into the past will not occur."
                              }
                            },
                            "required": [
                              "baseDate",
                              "unit",
                              "quantity"
                            ]
                          }
                        },
                        "anyOf": [
                          {
                            "required": [
                              "absoluteDateTime"
                            ]
                          },
                          {
                            "required": [
                              "relativeDateTime"
                            ]
                          },
                          {
                            "not": {
                              "anyOf": [
                                {
                                  "required": [
                                    "absoluteDateTime"
                                  ]
                                },
                                {
                                  "required": [
                                    "relativeDateTime"
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "regarding_object": {
                        "type": "string",
                        "description": "The type of object which this checklist item is related to. For example, for Form checklists, this will be 'Form'."
                      },
                      "regarding_object_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-05ae-4e64-bcef-21db0da92c1b",
                        "description": "The UUID of the object which this checklists item is related to. For example, for Form checklists, this is the UUID of the Form that must be completed to complete the checklist item."
                      },
                      "fulfilled_by_object_name": {
                        "type": "string",
                        "description": "The type of object which completes this checklist item. For example, for Form checklists, this will be 'FormResponse'."
                      },
                      "fulfilled_by_object_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-c68a-4428-bfb7-21db07ab814b",
                        "description": "The UUID of the object which completes this checklist item. For example, for Form checklists, this references the UUID of a FormResponse record."
                      },
                      "assigned_to_staff_uuids": {
                        "type": "array",
                        "format": "uuid",
                        "example": "123e4567-acbf-4b7c-b79f-21db0f9a428b",
                        "items": {
                          "type": "string",
                          "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                          "description": "Must be the UUID of a Staff record"
                        },
                        "maxItems": 1
                      },
                      "is_locked": {
                        "type": "number",
                        "description": "The UUID of the object which completes this checklist item. For example, for Form checklists, this references the UUID of a FormResponse record. (Read-only). \n\nValid values are [0,1]",
                        "enum": [
                          0,
                          1
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-f4b0-4092-ba00-21db0586b32b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "job_uuid": "123e4567-d94a-4ab3-b388-21db0e61279b",
                        "name": "string",
                        "section_name": "string",
                        "item_type": "string",
                        "sort_order": "number",
                        "completed_timestamp": "YYYY-MM-DD HH:MM:SS",
                        "completed_by_staff_uuid": "123e4567-f7b5-463d-9f54-21db03194eab",
                        "completed_during_checkin_uuid": "123e4567-0208-4b5d-837d-21db08346f6b",
                        "reminder_type": "string",
                        "reminder_data": {
                          "absoluteDateTime": "string",
                          "relativeDateTime": {
                            "baseDate": "string",
                            "unit": "string",
                            "quantity": "string"
                          }
                        },
                        "regarding_object": "string",
                        "regarding_object_uuid": "123e4567-a24b-4bea-be7d-21db051d359b",
                        "fulfilled_by_object_name": "string",
                        "fulfilled_by_object_uuid": "123e4567-6dfe-423d-96b0-21db0b3e654b",
                        "assigned_to_staff_uuids": "123e4567-c886-4711-ac48-21db0068f4db",
                        "is_locked": "number"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Checklists"
        ],
        "operationId": "post-JobChecklist-create",
        "summary": "Create a new Job Checklist",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-72e6-47d1-b2ef-21db0ae2678b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-c767-4fd5-bcec-21db07cf1b7b"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "section_name": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "item_type": {
                    "type": "string"
                  },
                  "sort_order": {
                    "type": "number"
                  },
                  "completed_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "completed_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-a6a9-4ebb-8fce-21db0fdc5f4b"
                  },
                  "completed_during_checkin_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-8c52-4797-9918-21db0c7a9c4b"
                  },
                  "reminder_type": {
                    "type": "string"
                  },
                  "reminder_data": {
                    "type": "object",
                    "properties": {
                      "absoluteDateTime": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}\\ \\d{2}:\\d{2}:\\d{2}$"
                      },
                      "relativeDateTime": {
                        "type": "object",
                        "properties": {
                          "baseDate": {
                            "type": "string",
                            "enum": [
                              "JOB_CREATE_TIME",
                              "NEXT_BOOKING_TIME"
                            ]
                          },
                          "unit": {
                            "type": "string",
                            "enum": [
                              "DAY",
                              "HOUR",
                              "MINUTE"
                            ]
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "Number of units to add/subtract from base date. Negative quantities mean the reminder occurs before the base date. Reminders scheduled into the past will not occur."
                          }
                        },
                        "required": [
                          "baseDate",
                          "unit",
                          "quantity"
                        ]
                      }
                    },
                    "anyOf": [
                      {
                        "required": [
                          "absoluteDateTime"
                        ]
                      },
                      {
                        "required": [
                          "relativeDateTime"
                        ]
                      },
                      {
                        "not": {
                          "anyOf": [
                            {
                              "required": [
                                "absoluteDateTime"
                              ]
                            },
                            {
                              "required": [
                                "relativeDateTime"
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "regarding_object": {
                    "type": "string",
                    "description": "The type of object which this checklist item is related to. For example, for Form checklists, this will be 'Form'."
                  },
                  "regarding_object_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-05ae-4e64-bcef-21db0da92c1b",
                    "description": "The UUID of the object which this checklists item is related to. For example, for Form checklists, this is the UUID of the Form that must be completed to complete the checklist item."
                  },
                  "fulfilled_by_object_name": {
                    "type": "string",
                    "description": "The type of object which completes this checklist item. For example, for Form checklists, this will be 'FormResponse'."
                  },
                  "fulfilled_by_object_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-c68a-4428-bfb7-21db07ab814b",
                    "description": "The UUID of the object which completes this checklist item. For example, for Form checklists, this references the UUID of a FormResponse record."
                  },
                  "assigned_to_staff_uuids": {
                    "type": "array",
                    "format": "uuid",
                    "example": "123e4567-acbf-4b7c-b79f-21db0f9a428b",
                    "items": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "description": "Must be the UUID of a Staff record"
                    },
                    "maxItems": 1
                  },
                  "is_locked": {
                    "type": "number",
                    "description": "The UUID of the object which completes this checklist item. For example, for Form checklists, this references the UUID of a FormResponse record. (Read-only). \n\nValid values are [0,1]",
                    "enum": [
                      0,
                      1
                    ]
                  }
                }
              }
            }
          },
          "description": "Job Checklist record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Job Checklist record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobchecklist/{uuid}.json": {
      "get": {
        "tags": [
          "Job Checklists"
        ],
        "operationId": "get-JobChecklist-single",
        "summary": "Retrieve a Job Checklist",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Checklist",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job Checklist record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-72e6-47d1-b2ef-21db0ae2678b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "job_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-c767-4fd5-bcec-21db07cf1b7b"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "section_name": {
                      "type": "string",
                      "maxLength": 256
                    },
                    "item_type": {
                      "type": "string"
                    },
                    "sort_order": {
                      "type": "number"
                    },
                    "completed_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "completed_by_staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-a6a9-4ebb-8fce-21db0fdc5f4b"
                    },
                    "completed_during_checkin_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-8c52-4797-9918-21db0c7a9c4b"
                    },
                    "reminder_type": {
                      "type": "string"
                    },
                    "reminder_data": {
                      "type": "object",
                      "properties": {
                        "absoluteDateTime": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}\\ \\d{2}:\\d{2}:\\d{2}$"
                        },
                        "relativeDateTime": {
                          "type": "object",
                          "properties": {
                            "baseDate": {
                              "type": "string",
                              "enum": [
                                "JOB_CREATE_TIME",
                                "NEXT_BOOKING_TIME"
                              ]
                            },
                            "unit": {
                              "type": "string",
                              "enum": [
                                "DAY",
                                "HOUR",
                                "MINUTE"
                              ]
                            },
                            "quantity": {
                              "type": "integer",
                              "description": "Number of units to add/subtract from base date. Negative quantities mean the reminder occurs before the base date. Reminders scheduled into the past will not occur."
                            }
                          },
                          "required": [
                            "baseDate",
                            "unit",
                            "quantity"
                          ]
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "absoluteDateTime"
                          ]
                        },
                        {
                          "required": [
                            "relativeDateTime"
                          ]
                        },
                        {
                          "not": {
                            "anyOf": [
                              {
                                "required": [
                                  "absoluteDateTime"
                                ]
                              },
                              {
                                "required": [
                                  "relativeDateTime"
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "regarding_object": {
                      "type": "string",
                      "description": "The type of object which this checklist item is related to. For example, for Form checklists, this will be 'Form'."
                    },
                    "regarding_object_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-05ae-4e64-bcef-21db0da92c1b",
                      "description": "The UUID of the object which this checklists item is related to. For example, for Form checklists, this is the UUID of the Form that must be completed to complete the checklist item."
                    },
                    "fulfilled_by_object_name": {
                      "type": "string",
                      "description": "The type of object which completes this checklist item. For example, for Form checklists, this will be 'FormResponse'."
                    },
                    "fulfilled_by_object_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-c68a-4428-bfb7-21db07ab814b",
                      "description": "The UUID of the object which completes this checklist item. For example, for Form checklists, this references the UUID of a FormResponse record."
                    },
                    "assigned_to_staff_uuids": {
                      "type": "array",
                      "format": "uuid",
                      "example": "123e4567-acbf-4b7c-b79f-21db0f9a428b",
                      "items": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "description": "Must be the UUID of a Staff record"
                      },
                      "maxItems": 1
                    },
                    "is_locked": {
                      "type": "number",
                      "description": "The UUID of the object which completes this checklist item. For example, for Form checklists, this references the UUID of a FormResponse record. (Read-only). \n\nValid values are [0,1]",
                      "enum": [
                        0,
                        1
                      ]
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-3748-4c3d-80ce-21db096b02eb",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "job_uuid": "123e4567-35f2-4e13-b2dc-21db0c761abb",
                      "name": "string",
                      "section_name": "string",
                      "item_type": "string",
                      "sort_order": "number",
                      "completed_timestamp": "YYYY-MM-DD HH:MM:SS",
                      "completed_by_staff_uuid": "123e4567-9a29-4965-a4f3-21db05e022eb",
                      "completed_during_checkin_uuid": "123e4567-db37-4c69-a035-21db067dee5b",
                      "reminder_type": "string",
                      "reminder_data": {
                        "absoluteDateTime": "string",
                        "relativeDateTime": {
                          "baseDate": "string",
                          "unit": "string",
                          "quantity": "string"
                        }
                      },
                      "regarding_object": "string",
                      "regarding_object_uuid": "123e4567-6784-4ffa-adbd-21db0ab85e2b",
                      "fulfilled_by_object_name": "string",
                      "fulfilled_by_object_uuid": "123e4567-954b-4928-bd26-21db02161bab",
                      "assigned_to_staff_uuids": "123e4567-842c-47f0-949b-21db08cf93cb",
                      "is_locked": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Checklists"
        ],
        "operationId": "post-JobChecklist-single",
        "summary": "Update a Job Checklist",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Checklist",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-72e6-47d1-b2ef-21db0ae2678b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-c767-4fd5-bcec-21db07cf1b7b"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "section_name": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "item_type": {
                    "type": "string"
                  },
                  "sort_order": {
                    "type": "number"
                  },
                  "completed_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "completed_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-a6a9-4ebb-8fce-21db0fdc5f4b"
                  },
                  "completed_during_checkin_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-8c52-4797-9918-21db0c7a9c4b"
                  },
                  "reminder_type": {
                    "type": "string"
                  },
                  "reminder_data": {
                    "type": "object",
                    "properties": {
                      "absoluteDateTime": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}\\ \\d{2}:\\d{2}:\\d{2}$"
                      },
                      "relativeDateTime": {
                        "type": "object",
                        "properties": {
                          "baseDate": {
                            "type": "string",
                            "enum": [
                              "JOB_CREATE_TIME",
                              "NEXT_BOOKING_TIME"
                            ]
                          },
                          "unit": {
                            "type": "string",
                            "enum": [
                              "DAY",
                              "HOUR",
                              "MINUTE"
                            ]
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "Number of units to add/subtract from base date. Negative quantities mean the reminder occurs before the base date. Reminders scheduled into the past will not occur."
                          }
                        },
                        "required": [
                          "baseDate",
                          "unit",
                          "quantity"
                        ]
                      }
                    },
                    "anyOf": [
                      {
                        "required": [
                          "absoluteDateTime"
                        ]
                      },
                      {
                        "required": [
                          "relativeDateTime"
                        ]
                      },
                      {
                        "not": {
                          "anyOf": [
                            {
                              "required": [
                                "absoluteDateTime"
                              ]
                            },
                            {
                              "required": [
                                "relativeDateTime"
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "regarding_object": {
                    "type": "string",
                    "description": "The type of object which this checklist item is related to. For example, for Form checklists, this will be 'Form'."
                  },
                  "regarding_object_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-05ae-4e64-bcef-21db0da92c1b",
                    "description": "The UUID of the object which this checklists item is related to. For example, for Form checklists, this is the UUID of the Form that must be completed to complete the checklist item."
                  },
                  "fulfilled_by_object_name": {
                    "type": "string",
                    "description": "The type of object which completes this checklist item. For example, for Form checklists, this will be 'FormResponse'."
                  },
                  "fulfilled_by_object_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-c68a-4428-bfb7-21db07ab814b",
                    "description": "The UUID of the object which completes this checklist item. For example, for Form checklists, this references the UUID of a FormResponse record."
                  },
                  "assigned_to_staff_uuids": {
                    "type": "array",
                    "format": "uuid",
                    "example": "123e4567-acbf-4b7c-b79f-21db0f9a428b",
                    "items": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "description": "Must be the UUID of a Staff record"
                    },
                    "maxItems": 1
                  },
                  "is_locked": {
                    "type": "number",
                    "description": "The UUID of the object which completes this checklist item. For example, for Form checklists, this references the UUID of a FormResponse record. (Read-only). \n\nValid values are [0,1]",
                    "enum": [
                      0,
                      1
                    ]
                  }
                }
              }
            }
          },
          "description": "Job Checklist fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Checklists"
        ],
        "operationId": "delete-JobChecklist-single",
        "summary": "Delete a Job Checklist",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Checklist",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job Checklist successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobcontact.json": {
      "get": {
        "tags": [
          "Job Contacts"
        ],
        "operationId": "get-JobContact-all",
        "summary": "List all Job Contacts",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_contacts**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_job_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Job Contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-8ce0-40af-a8d2-21db0c177cdb"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "job_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-d182-4864-891a-21db01d84a6b"
                      },
                      "first": {
                        "type": "string"
                      },
                      "last": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "mobile": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "type": {
                        "type": "string"
                      },
                      "is_primary_contact": {
                        "type": "string"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-235c-40e0-9b69-21db006c332b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "job_uuid": "123e4567-b382-45c3-a8fd-21db09cff76b",
                        "first": "string",
                        "last": "string",
                        "phone": "string",
                        "mobile": "string",
                        "email": "string",
                        "type": "string",
                        "is_primary_contact": "string"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Contacts"
        ],
        "operationId": "post-JobContact-create",
        "summary": "Create a new Job Contact",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_contacts**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-8ce0-40af-a8d2-21db0c177cdb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-d182-4864-891a-21db01d84a6b"
                  },
                  "first": {
                    "type": "string"
                  },
                  "last": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "mobile": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "type": {
                    "type": "string"
                  },
                  "is_primary_contact": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Job Contact record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Job Contact record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobcontact/{uuid}.json": {
      "get": {
        "tags": [
          "Job Contacts"
        ],
        "operationId": "get-JobContact-single",
        "summary": "Retrieve a Job Contact",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_contacts**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_job_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Contact",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job Contact record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-8ce0-40af-a8d2-21db0c177cdb"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "job_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-d182-4864-891a-21db01d84a6b"
                    },
                    "first": {
                      "type": "string"
                    },
                    "last": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "mobile": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "type": {
                      "type": "string"
                    },
                    "is_primary_contact": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-9685-46b1-811d-21db0ca0bbab",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "job_uuid": "123e4567-0b59-43e0-b150-21db06b04fcb",
                      "first": "string",
                      "last": "string",
                      "phone": "string",
                      "mobile": "string",
                      "email": "string",
                      "type": "string",
                      "is_primary_contact": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Contacts"
        ],
        "operationId": "post-JobContact-single",
        "summary": "Update a Job Contact",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_contacts**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Contact",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-8ce0-40af-a8d2-21db0c177cdb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-d182-4864-891a-21db01d84a6b"
                  },
                  "first": {
                    "type": "string"
                  },
                  "last": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "mobile": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "type": {
                    "type": "string"
                  },
                  "is_primary_contact": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Job Contact fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Contacts"
        ],
        "operationId": "delete-JobContact-single",
        "summary": "Delete a Job Contact",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_contacts**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Contact",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job Contact successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobmaterial.json": {
      "get": {
        "tags": [
          "Job Materials"
        ],
        "operationId": "get-JobMaterial-all",
        "summary": "List all Job Materials",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_materials**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_job_materials"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Job Materials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-b4c6-4f01-adc1-21db0b4011fb"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "job_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-da04-4cb5-95d9-21db06f13f9b"
                      },
                      "material_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-22f9-43b2-a08b-21db0504683b"
                      },
                      "name": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "string"
                      },
                      "price": {
                        "type": "string"
                      },
                      "displayed_amount": {
                        "type": "string"
                      },
                      "displayed_amount_is_tax_inclusive": {
                        "type": "string"
                      },
                      "tax_rate_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-d779-4fda-98a6-21db03e3173b"
                      },
                      "sort_order": {
                        "type": "string"
                      },
                      "cost": {
                        "type": "string"
                      },
                      "displayed_cost": {
                        "type": "string"
                      },
                      "job_material_bundle_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-46a5-4804-86c7-21db014fd21b",
                        "description": "UUID of a JobMaterialBundle which this JobMaterial belongs to. The default value is blank, which means that the JobMaterial is not part of a JobMaterialBundle."
                      }
                    },
                    "required": [
                      "quantity"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-39c1-4a0c-8e35-21db0ea95fbb",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "job_uuid": "123e4567-bc5e-44df-9402-21db0be796ab",
                        "material_uuid": "123e4567-ecdd-4c42-be36-21db003fc19b",
                        "name": "string",
                        "quantity": "string",
                        "price": "string",
                        "displayed_amount": "string",
                        "displayed_amount_is_tax_inclusive": "string",
                        "tax_rate_uuid": "123e4567-d917-49bd-a2cd-21db0deca88b",
                        "sort_order": "string",
                        "cost": "string",
                        "displayed_cost": "string",
                        "job_material_bundle_uuid": "123e4567-d48c-4373-9f39-21db08cdb17b"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Materials"
        ],
        "operationId": "post-JobMaterial-create",
        "summary": "Create a new Job Material",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_materials**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_materials"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-b4c6-4f01-adc1-21db0b4011fb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-da04-4cb5-95d9-21db06f13f9b"
                  },
                  "material_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-22f9-43b2-a08b-21db0504683b"
                  },
                  "name": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "string"
                  },
                  "price": {
                    "type": "string"
                  },
                  "displayed_amount": {
                    "type": "string"
                  },
                  "displayed_amount_is_tax_inclusive": {
                    "type": "string"
                  },
                  "tax_rate_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-d779-4fda-98a6-21db03e3173b"
                  },
                  "sort_order": {
                    "type": "string"
                  },
                  "cost": {
                    "type": "string"
                  },
                  "displayed_cost": {
                    "type": "string"
                  },
                  "job_material_bundle_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-46a5-4804-86c7-21db014fd21b",
                    "description": "UUID of a JobMaterialBundle which this JobMaterial belongs to. The default value is blank, which means that the JobMaterial is not part of a JobMaterialBundle."
                  }
                },
                "required": [
                  "quantity"
                ]
              }
            }
          },
          "description": "Job Material record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Job Material record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobmaterial/{uuid}.json": {
      "get": {
        "tags": [
          "Job Materials"
        ],
        "operationId": "get-JobMaterial-single",
        "summary": "Retrieve a Job Material",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_materials**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_job_materials"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Material",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job Material record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-b4c6-4f01-adc1-21db0b4011fb"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "job_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-da04-4cb5-95d9-21db06f13f9b"
                    },
                    "material_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-22f9-43b2-a08b-21db0504683b"
                    },
                    "name": {
                      "type": "string"
                    },
                    "quantity": {
                      "type": "string"
                    },
                    "price": {
                      "type": "string"
                    },
                    "displayed_amount": {
                      "type": "string"
                    },
                    "displayed_amount_is_tax_inclusive": {
                      "type": "string"
                    },
                    "tax_rate_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-d779-4fda-98a6-21db03e3173b"
                    },
                    "sort_order": {
                      "type": "string"
                    },
                    "cost": {
                      "type": "string"
                    },
                    "displayed_cost": {
                      "type": "string"
                    },
                    "job_material_bundle_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-46a5-4804-86c7-21db014fd21b",
                      "description": "UUID of a JobMaterialBundle which this JobMaterial belongs to. The default value is blank, which means that the JobMaterial is not part of a JobMaterialBundle."
                    }
                  },
                  "required": [
                    "quantity"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-ee93-4e87-9699-21db07d3abfb",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "job_uuid": "123e4567-61ad-4767-8f3b-21db072e123b",
                      "material_uuid": "123e4567-fad9-412d-af8a-21db02fe8afb",
                      "name": "string",
                      "quantity": "string",
                      "price": "string",
                      "displayed_amount": "string",
                      "displayed_amount_is_tax_inclusive": "string",
                      "tax_rate_uuid": "123e4567-a59c-43d6-997e-21db0eaf23bb",
                      "sort_order": "string",
                      "cost": "string",
                      "displayed_cost": "string",
                      "job_material_bundle_uuid": "123e4567-c5e3-4a5e-9504-21db0ad6194b"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Materials"
        ],
        "operationId": "post-JobMaterial-single",
        "summary": "Update a Job Material",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_materials**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_materials"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Material",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-b4c6-4f01-adc1-21db0b4011fb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-da04-4cb5-95d9-21db06f13f9b"
                  },
                  "material_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-22f9-43b2-a08b-21db0504683b"
                  },
                  "name": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "string"
                  },
                  "price": {
                    "type": "string"
                  },
                  "displayed_amount": {
                    "type": "string"
                  },
                  "displayed_amount_is_tax_inclusive": {
                    "type": "string"
                  },
                  "tax_rate_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-d779-4fda-98a6-21db03e3173b"
                  },
                  "sort_order": {
                    "type": "string"
                  },
                  "cost": {
                    "type": "string"
                  },
                  "displayed_cost": {
                    "type": "string"
                  },
                  "job_material_bundle_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-46a5-4804-86c7-21db014fd21b",
                    "description": "UUID of a JobMaterialBundle which this JobMaterial belongs to. The default value is blank, which means that the JobMaterial is not part of a JobMaterialBundle."
                  }
                },
                "required": [
                  "quantity"
                ]
              }
            }
          },
          "description": "Job Material fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Materials"
        ],
        "operationId": "delete-JobMaterial-single",
        "summary": "Delete a Job Material",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_materials**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_materials"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Material",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job Material successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobmaterialbundle.json": {
      "get": {
        "tags": [
          "Job Material Bundles"
        ],
        "operationId": "get-JobMaterialBundle-all",
        "summary": "List all Job Material Bundles",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Job Material Bundles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-8009-4301-adcb-21db00d8b3bb"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "item_number": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "string"
                      },
                      "sort_order": {
                        "type": "number"
                      },
                      "material_bundle_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-a4e3-44ec-b890-21db09adf79b",
                        "description": "UUID of the MaterialBundle which this JobMaterialBundle was originally created from."
                      },
                      "job_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-7192-4ce3-bcef-21db0e73b31b"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-cd21-424b-9387-21db0a63bc1b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "item_number": "string",
                        "name": "string",
                        "quantity": "string",
                        "sort_order": "number",
                        "material_bundle_uuid": "123e4567-84a1-4c2d-a9e5-21db084af30b",
                        "job_uuid": "123e4567-abb7-43ee-843b-21db09cbf17b"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Material Bundles"
        ],
        "operationId": "post-JobMaterialBundle-create",
        "summary": "Create a new Job Material Bundle",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-8009-4301-adcb-21db00d8b3bb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "item_number": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "string"
                  },
                  "sort_order": {
                    "type": "number"
                  },
                  "material_bundle_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-a4e3-44ec-b890-21db09adf79b",
                    "description": "UUID of the MaterialBundle which this JobMaterialBundle was originally created from."
                  },
                  "job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-7192-4ce3-bcef-21db0e73b31b"
                  }
                }
              }
            }
          },
          "description": "Job Material Bundle record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Job Material Bundle record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobmaterialbundle/{uuid}.json": {
      "get": {
        "tags": [
          "Job Material Bundles"
        ],
        "operationId": "get-JobMaterialBundle-single",
        "summary": "Retrieve a Job Material Bundle",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Material Bundle",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job Material Bundle record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-8009-4301-adcb-21db00d8b3bb"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "item_number": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "quantity": {
                      "type": "string"
                    },
                    "sort_order": {
                      "type": "number"
                    },
                    "material_bundle_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-a4e3-44ec-b890-21db09adf79b",
                      "description": "UUID of the MaterialBundle which this JobMaterialBundle was originally created from."
                    },
                    "job_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-7192-4ce3-bcef-21db0e73b31b"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-def0-4f4d-b8ee-21db0e206aeb",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "item_number": "string",
                      "name": "string",
                      "quantity": "string",
                      "sort_order": "number",
                      "material_bundle_uuid": "123e4567-18a8-4e04-966b-21db04dbbd1b",
                      "job_uuid": "123e4567-0535-4732-b427-21db0aed91db"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Material Bundles"
        ],
        "operationId": "post-JobMaterialBundle-single",
        "summary": "Update a Job Material Bundle",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Material Bundle",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-8009-4301-adcb-21db00d8b3bb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "item_number": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "string"
                  },
                  "sort_order": {
                    "type": "number"
                  },
                  "material_bundle_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-a4e3-44ec-b890-21db09adf79b",
                    "description": "UUID of the MaterialBundle which this JobMaterialBundle was originally created from."
                  },
                  "job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-7192-4ce3-bcef-21db0e73b31b"
                  }
                }
              }
            }
          },
          "description": "Job Material Bundle fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Material Bundles"
        ],
        "operationId": "delete-JobMaterialBundle-single",
        "summary": "Delete a Job Material Bundle",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Material Bundle",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job Material Bundle successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobpayment.json": {
      "get": {
        "tags": [
          "Job Payments"
        ],
        "operationId": "get-JobPayment-all",
        "summary": "List all Job Payments",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Job Payments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-2358-4eee-abfe-21db0128779b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "job_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-f12a-4446-b0a2-21db0526306b"
                      },
                      "actioned_by_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-2289-45a5-8ba8-21db0304475b"
                      },
                      "timestamp": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      },
                      "method": {
                        "type": "string"
                      },
                      "note": {
                        "type": "string"
                      },
                      "attachment_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-7be9-4126-a2d8-21db076c049b"
                      },
                      "is_deposit": {
                        "type": "number",
                        "description": "(Read-only). \n\nValid values are [0,1]",
                        "enum": [
                          0,
                          1
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-c14b-48b7-8e9e-21db0dde77bb",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "job_uuid": "123e4567-f40b-48c6-a488-21db05836f4b",
                        "actioned_by_uuid": "123e4567-c760-4cb2-ab83-21db0effe34b",
                        "timestamp": "string",
                        "amount": "string",
                        "method": "string",
                        "note": "string",
                        "attachment_uuid": "123e4567-0c7c-4e6c-a411-21db060b88db",
                        "is_deposit": "number"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Payments"
        ],
        "operationId": "post-JobPayment-create",
        "summary": "Create a new Job Payment",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-2358-4eee-abfe-21db0128779b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-f12a-4446-b0a2-21db0526306b"
                  },
                  "actioned_by_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-2289-45a5-8ba8-21db0304475b"
                  },
                  "timestamp": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  },
                  "method": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  },
                  "attachment_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-7be9-4126-a2d8-21db076c049b"
                  },
                  "is_deposit": {
                    "type": "number",
                    "description": "(Read-only). \n\nValid values are [0,1]",
                    "enum": [
                      0,
                      1
                    ]
                  }
                }
              }
            }
          },
          "description": "Job Payment record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Job Payment record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobpayment/{uuid}.json": {
      "get": {
        "tags": [
          "Job Payments"
        ],
        "operationId": "get-JobPayment-single",
        "summary": "Retrieve a Job Payment",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Payment",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job Payment record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-2358-4eee-abfe-21db0128779b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "job_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-f12a-4446-b0a2-21db0526306b"
                    },
                    "actioned_by_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-2289-45a5-8ba8-21db0304475b"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    },
                    "method": {
                      "type": "string"
                    },
                    "note": {
                      "type": "string"
                    },
                    "attachment_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-7be9-4126-a2d8-21db076c049b"
                    },
                    "is_deposit": {
                      "type": "number",
                      "description": "(Read-only). \n\nValid values are [0,1]",
                      "enum": [
                        0,
                        1
                      ]
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-5fff-4da9-b3f0-21db064f1b1b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "job_uuid": "123e4567-4289-48e4-b076-21db06c7617b",
                      "actioned_by_uuid": "123e4567-93aa-40cc-9f2f-21db05b4032b",
                      "timestamp": "string",
                      "amount": "string",
                      "method": "string",
                      "note": "string",
                      "attachment_uuid": "123e4567-958a-4586-9448-21db0a6267bb",
                      "is_deposit": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Payments"
        ],
        "operationId": "post-JobPayment-single",
        "summary": "Update a Job Payment",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Payment",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-2358-4eee-abfe-21db0128779b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-f12a-4446-b0a2-21db0526306b"
                  },
                  "actioned_by_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-2289-45a5-8ba8-21db0304475b"
                  },
                  "timestamp": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  },
                  "method": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  },
                  "attachment_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-7be9-4126-a2d8-21db076c049b"
                  },
                  "is_deposit": {
                    "type": "number",
                    "description": "(Read-only). \n\nValid values are [0,1]",
                    "enum": [
                      0,
                      1
                    ]
                  }
                }
              }
            }
          },
          "description": "Job Payment fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Payments"
        ],
        "operationId": "delete-JobPayment-single",
        "summary": "Delete a Job Payment",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Payment",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job Payment successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/knowledgearticle.json": {
      "get": {
        "tags": [
          "Knowledge Articles"
        ],
        "operationId": "get-KnowledgeArticle-all",
        "summary": "List all Knowledge Articles",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_knowledge**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_knowledge"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Knowledge Articles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-1497-42f2-9368-21db0c98b51b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "name": {
                        "type": "string"
                      },
                      "content": {
                        "type": "string"
                      },
                      "article_type": {
                        "type": "string"
                      },
                      "tags": {
                        "type": "string"
                      },
                      "relationships": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "object_name": {
                              "type": "string",
                              "enum": [
                                "Job",
                                "job"
                              ]
                            },
                            "object_uuid": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "object_description": {
                              "type": "string"
                            },
                            "create_date": {
                              "type": "string",
                              "pattern": "^\\d{4}-\\d{2}-\\d{2}\\ \\d{2}:\\d{2}:\\d{2}$"
                            }
                          },
                          "required": [
                            "object_name",
                            "object_uuid"
                          ]
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-684b-4803-83a9-21db04125e6b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "name": "string",
                        "content": "string",
                        "article_type": "string",
                        "tags": "string",
                        "relationships": [
                          {
                            "object_name": "string",
                            "object_uuid": "string",
                            "object_description": "string",
                            "create_date": "string"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Knowledge Articles"
        ],
        "operationId": "post-KnowledgeArticle-create",
        "summary": "Create a new Knowledge Article",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_knowledge**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_knowledge"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-1497-42f2-9368-21db0c98b51b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "article_type": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "string"
                  },
                  "relationships": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "object_name": {
                          "type": "string",
                          "enum": [
                            "Job",
                            "job"
                          ]
                        },
                        "object_uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "object_description": {
                          "type": "string"
                        },
                        "create_date": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}\\ \\d{2}:\\d{2}:\\d{2}$"
                        }
                      },
                      "required": [
                        "object_name",
                        "object_uuid"
                      ]
                    }
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Knowledge Article record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Knowledge Article record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/knowledgearticle/{uuid}.json": {
      "get": {
        "tags": [
          "Knowledge Articles"
        ],
        "operationId": "get-KnowledgeArticle-single",
        "summary": "Retrieve a Knowledge Article",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_knowledge**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_knowledge"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Knowledge Article",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Knowledge Article record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-1497-42f2-9368-21db0c98b51b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "name": {
                      "type": "string"
                    },
                    "content": {
                      "type": "string"
                    },
                    "article_type": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "string"
                    },
                    "relationships": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "object_name": {
                            "type": "string",
                            "enum": [
                              "Job",
                              "job"
                            ]
                          },
                          "object_uuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "object_description": {
                            "type": "string"
                          },
                          "create_date": {
                            "type": "string",
                            "pattern": "^\\d{4}-\\d{2}-\\d{2}\\ \\d{2}:\\d{2}:\\d{2}$"
                          }
                        },
                        "required": [
                          "object_name",
                          "object_uuid"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-79ed-4ddb-bc55-21db01d8397b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "name": "string",
                      "content": "string",
                      "article_type": "string",
                      "tags": "string",
                      "relationships": [
                        {
                          "object_name": "string",
                          "object_uuid": "string",
                          "object_description": "string",
                          "create_date": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Knowledge Articles"
        ],
        "operationId": "post-KnowledgeArticle-single",
        "summary": "Update a Knowledge Article",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Knowledge Article",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-1497-42f2-9368-21db0c98b51b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "article_type": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "string"
                  },
                  "relationships": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "object_name": {
                          "type": "string",
                          "enum": [
                            "Job",
                            "job"
                          ]
                        },
                        "object_uuid": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "object_description": {
                          "type": "string"
                        },
                        "create_date": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}\\ \\d{2}:\\d{2}:\\d{2}$"
                        }
                      },
                      "required": [
                        "object_name",
                        "object_uuid"
                      ]
                    }
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Knowledge Article fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Knowledge Articles"
        ],
        "operationId": "delete-KnowledgeArticle-single",
        "summary": "Delete a Knowledge Article",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Knowledge Article",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Knowledge Article successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/location.json": {
      "get": {
        "tags": [
          "Locations"
        ],
        "operationId": "get-Location-all",
        "summary": "List all Locations",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_locations**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_locations"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Locations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-9fd3-4c57-a5fb-21db046572bb"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "name": {
                        "type": "string",
                        "description": "Location's name",
                        "maxLength": 50
                      },
                      "line1": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "line2": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "line3": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "city": {
                        "type": "string",
                        "maxLength": 50
                      },
                      "country": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "post_code": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "phone_1": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "state": {
                        "type": "string",
                        "description": "Address State"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float"
                      },
                      "lat": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "required": [
                      "name",
                      "state"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-1038-4c69-8280-21db0d5abddb",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "name": "string",
                        "line1": "string",
                        "line2": "string",
                        "line3": "string",
                        "city": "string",
                        "country": "string",
                        "post_code": "string",
                        "phone_1": "string",
                        "state": "string",
                        "lng": "number",
                        "lat": "number"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "operationId": "post-Location-create",
        "summary": "Create a new Location",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_locations**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_locations"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-9fd3-4c57-a5fb-21db046572bb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string",
                    "description": "Location's name",
                    "maxLength": 50
                  },
                  "line1": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "line2": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "line3": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "post_code": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "phone_1": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "state": {
                    "type": "string",
                    "description": "Address State"
                  },
                  "lng": {
                    "type": "number",
                    "format": "float"
                  },
                  "lat": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "required": [
                  "name",
                  "state"
                ]
              }
            }
          },
          "description": "Location record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Location record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/location/{uuid}.json": {
      "get": {
        "tags": [
          "Locations"
        ],
        "operationId": "get-Location-single",
        "summary": "Retrieve a Location",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_locations**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_locations"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Location",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-9fd3-4c57-a5fb-21db046572bb"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "name": {
                      "type": "string",
                      "description": "Location's name",
                      "maxLength": 50
                    },
                    "line1": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "line2": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "line3": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "city": {
                      "type": "string",
                      "maxLength": 50
                    },
                    "country": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "post_code": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "phone_1": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "state": {
                      "type": "string",
                      "description": "Address State"
                    },
                    "lng": {
                      "type": "number",
                      "format": "float"
                    },
                    "lat": {
                      "type": "number",
                      "format": "float"
                    }
                  },
                  "required": [
                    "name",
                    "state"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-ca66-403a-9505-21db0095c9db",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "name": "string",
                      "line1": "string",
                      "line2": "string",
                      "line3": "string",
                      "city": "string",
                      "country": "string",
                      "post_code": "string",
                      "phone_1": "string",
                      "state": "string",
                      "lng": "number",
                      "lat": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "operationId": "post-Location-single",
        "summary": "Update a Location",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_locations**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_locations"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Location",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-9fd3-4c57-a5fb-21db046572bb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string",
                    "description": "Location's name",
                    "maxLength": 50
                  },
                  "line1": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "line2": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "line3": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "post_code": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "phone_1": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "state": {
                    "type": "string",
                    "description": "Address State"
                  },
                  "lng": {
                    "type": "number",
                    "format": "float"
                  },
                  "lat": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "required": [
                  "name",
                  "state"
                ]
              }
            }
          },
          "description": "Location fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Locations"
        ],
        "operationId": "delete-Location-single",
        "summary": "Delete a Location",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_locations**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_locations"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Location",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/material.json": {
      "get": {
        "tags": [
          "Materials"
        ],
        "operationId": "get-Material-all",
        "summary": "List all Materials",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_inventory**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_inventory"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Materials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-aa23-4dc7-8c7e-21db0649634b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "name": {
                        "type": "string"
                      },
                      "item_number": {
                        "type": "string",
                        "maxLength": 30
                      },
                      "price": {
                        "type": "string"
                      },
                      "cost": {
                        "type": "string"
                      },
                      "item_description": {
                        "type": "string"
                      },
                      "quantity_in_stock": {
                        "type": "number"
                      },
                      "price_includes_taxes": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "description": "\n\nValid values are [0,1]"
                      },
                      "use_description_for_invoicing": {
                        "type": "string"
                      },
                      "tax_rate_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-e229-48b6-85a3-21db091a6cfb"
                      },
                      "barcode": {
                        "type": "string"
                      },
                      "item_is_inventoried": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "description": "\n\nValid values are [0,1]"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-69a2-4176-9920-21db036d4a8b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "name": "string",
                        "item_number": "string",
                        "price": "string",
                        "cost": "string",
                        "item_description": "string",
                        "quantity_in_stock": "number",
                        "price_includes_taxes": "number",
                        "use_description_for_invoicing": "string",
                        "tax_rate_uuid": "123e4567-8e34-4f86-87dc-21db05cccd5b",
                        "barcode": "string",
                        "item_is_inventoried": "number"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Materials"
        ],
        "operationId": "post-Material-create",
        "summary": "Create a new Material",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_inventory**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_inventory"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-aa23-4dc7-8c7e-21db0649634b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string"
                  },
                  "item_number": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "price": {
                    "type": "string"
                  },
                  "cost": {
                    "type": "string"
                  },
                  "item_description": {
                    "type": "string"
                  },
                  "quantity_in_stock": {
                    "type": "number"
                  },
                  "price_includes_taxes": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "\n\nValid values are [0,1]"
                  },
                  "use_description_for_invoicing": {
                    "type": "string"
                  },
                  "tax_rate_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e229-48b6-85a3-21db091a6cfb"
                  },
                  "barcode": {
                    "type": "string"
                  },
                  "item_is_inventoried": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "\n\nValid values are [0,1]"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Material record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Material record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/material/{uuid}.json": {
      "get": {
        "tags": [
          "Materials"
        ],
        "operationId": "get-Material-single",
        "summary": "Retrieve a Material",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_inventory**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_inventory"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Material",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Material record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-aa23-4dc7-8c7e-21db0649634b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "name": {
                      "type": "string"
                    },
                    "item_number": {
                      "type": "string",
                      "maxLength": 30
                    },
                    "price": {
                      "type": "string"
                    },
                    "cost": {
                      "type": "string"
                    },
                    "item_description": {
                      "type": "string"
                    },
                    "quantity_in_stock": {
                      "type": "number"
                    },
                    "price_includes_taxes": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "description": "\n\nValid values are [0,1]"
                    },
                    "use_description_for_invoicing": {
                      "type": "string"
                    },
                    "tax_rate_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-e229-48b6-85a3-21db091a6cfb"
                    },
                    "barcode": {
                      "type": "string"
                    },
                    "item_is_inventoried": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "description": "\n\nValid values are [0,1]"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-698b-408e-9652-21db0c5bd46b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "name": "string",
                      "item_number": "string",
                      "price": "string",
                      "cost": "string",
                      "item_description": "string",
                      "quantity_in_stock": "number",
                      "price_includes_taxes": "number",
                      "use_description_for_invoicing": "string",
                      "tax_rate_uuid": "123e4567-852e-4484-8b2b-21db0223b4ab",
                      "barcode": "string",
                      "item_is_inventoried": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Materials"
        ],
        "operationId": "post-Material-single",
        "summary": "Update a Material",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_inventory**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_inventory"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Material",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-aa23-4dc7-8c7e-21db0649634b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string"
                  },
                  "item_number": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "price": {
                    "type": "string"
                  },
                  "cost": {
                    "type": "string"
                  },
                  "item_description": {
                    "type": "string"
                  },
                  "quantity_in_stock": {
                    "type": "number"
                  },
                  "price_includes_taxes": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "\n\nValid values are [0,1]"
                  },
                  "use_description_for_invoicing": {
                    "type": "string"
                  },
                  "tax_rate_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e229-48b6-85a3-21db091a6cfb"
                  },
                  "barcode": {
                    "type": "string"
                  },
                  "item_is_inventoried": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "\n\nValid values are [0,1]"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Material fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Materials"
        ],
        "operationId": "delete-Material-single",
        "summary": "Delete a Material",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_inventory**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_inventory"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Material",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Material successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/materialbundle.json": {
      "get": {
        "tags": [
          "Bundles"
        ],
        "operationId": "get-MaterialBundle-all",
        "summary": "List all Bundles",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Bundles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-647c-4c38-975c-21db048ffacb"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "item_number": {
                        "type": "string",
                        "maxLength": 30
                      },
                      "name": {
                        "type": "string"
                      },
                      "material_list": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "uuid": {
                              "type": "string",
                              "format": "uuid",
                              "description": "Must be the UUID of a Material record"
                            },
                            "quantity": {
                              "type": "number",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "uuid",
                            "quantity"
                          ]
                        },
                        "minItems": 1,
                        "maxItems": 50
                      }
                    },
                    "required": [
                      "item_number"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-d84c-4162-adf6-21db067e217b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "item_number": "string",
                        "name": "string",
                        "material_list": [
                          {
                            "uuid": "string",
                            "quantity": "number"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bundles"
        ],
        "operationId": "post-MaterialBundle-create",
        "summary": "Create a new Bundle",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-647c-4c38-975c-21db048ffacb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "item_number": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "name": {
                    "type": "string"
                  },
                  "material_list": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Must be the UUID of a Material record"
                        },
                        "quantity": {
                          "type": "number",
                          "minimum": 0
                        }
                      },
                      "required": [
                        "uuid",
                        "quantity"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 50
                  }
                },
                "required": [
                  "item_number"
                ]
              }
            }
          },
          "description": "Bundle record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Bundle record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/materialbundle/{uuid}.json": {
      "get": {
        "tags": [
          "Bundles"
        ],
        "operationId": "get-MaterialBundle-single",
        "summary": "Retrieve a Bundle",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Bundle",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bundle record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-647c-4c38-975c-21db048ffacb"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "item_number": {
                      "type": "string",
                      "maxLength": 30
                    },
                    "name": {
                      "type": "string"
                    },
                    "material_list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Must be the UUID of a Material record"
                          },
                          "quantity": {
                            "type": "number",
                            "minimum": 0
                          }
                        },
                        "required": [
                          "uuid",
                          "quantity"
                        ]
                      },
                      "minItems": 1,
                      "maxItems": 50
                    }
                  },
                  "required": [
                    "item_number"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-2218-48e1-8663-21db054a021b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "item_number": "string",
                      "name": "string",
                      "material_list": [
                        {
                          "uuid": "string",
                          "quantity": "number"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bundles"
        ],
        "operationId": "post-MaterialBundle-single",
        "summary": "Update a Bundle",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Bundle",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-647c-4c38-975c-21db048ffacb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "item_number": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "name": {
                    "type": "string"
                  },
                  "material_list": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Must be the UUID of a Material record"
                        },
                        "quantity": {
                          "type": "number",
                          "minimum": 0
                        }
                      },
                      "required": [
                        "uuid",
                        "quantity"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 50
                  }
                },
                "required": [
                  "item_number"
                ]
              }
            }
          },
          "description": "Bundle fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bundles"
        ],
        "operationId": "delete-MaterialBundle-single",
        "summary": "Delete a Bundle",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Bundle",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bundle successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/note.json": {
      "get": {
        "tags": [
          "Notes"
        ],
        "operationId": "get-Note-all",
        "summary": "List all Notes",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Notes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-5b77-468b-a8f1-21db04bfd46b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "related_object": {
                        "type": "string"
                      },
                      "related_object_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-2e3d-4bba-9fb0-21db0d46300b"
                      },
                      "note": {
                        "type": "string"
                      },
                      "action_required": {
                        "type": "string"
                      },
                      "action_completed_by_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-bd70-4ac9-bf9b-21db08eadb5b"
                      },
                      "edit_by_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-cbed-422c-b253-21db0067805b",
                        "readOnly": true,
                        "description": "Staff Member who last modified record"
                      },
                      "create_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "description": "Record creation timestamp"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-f417-467a-9108-21db0b9ef75b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "related_object": "string",
                        "related_object_uuid": "123e4567-b467-4876-90e4-21db0f97b64b",
                        "note": "string",
                        "action_required": "string",
                        "action_completed_by_staff_uuid": "123e4567-5db1-405b-b712-21db0a62197b",
                        "edit_by_staff_uuid": "123e4567-4300-4b10-ac7e-21db0c923ebb",
                        "create_date": "YYYY-MM-DD HH:MM:SS"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notes"
        ],
        "operationId": "post-Note-create",
        "summary": "Create a new Note",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-5b77-468b-a8f1-21db04bfd46b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "related_object": {
                    "type": "string"
                  },
                  "related_object_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-2e3d-4bba-9fb0-21db0d46300b"
                  },
                  "note": {
                    "type": "string"
                  },
                  "action_required": {
                    "type": "string"
                  },
                  "action_completed_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-bd70-4ac9-bf9b-21db08eadb5b"
                  },
                  "edit_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-cbed-422c-b253-21db0067805b",
                    "readOnly": true,
                    "description": "Staff Member who last modified record"
                  },
                  "create_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "description": "Record creation timestamp"
                  }
                }
              }
            }
          },
          "description": "Note record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Note record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/note/{uuid}.json": {
      "get": {
        "tags": [
          "Notes"
        ],
        "operationId": "get-Note-single",
        "summary": "Retrieve a Note",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Note",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Note record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-5b77-468b-a8f1-21db04bfd46b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "related_object": {
                      "type": "string"
                    },
                    "related_object_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-2e3d-4bba-9fb0-21db0d46300b"
                    },
                    "note": {
                      "type": "string"
                    },
                    "action_required": {
                      "type": "string"
                    },
                    "action_completed_by_staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-bd70-4ac9-bf9b-21db08eadb5b"
                    },
                    "edit_by_staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-cbed-422c-b253-21db0067805b",
                      "readOnly": true,
                      "description": "Staff Member who last modified record"
                    },
                    "create_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "description": "Record creation timestamp"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-f91b-4b4f-aea6-21db0433221b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "related_object": "string",
                      "related_object_uuid": "123e4567-ff57-4b3d-88e4-21db0274f5db",
                      "note": "string",
                      "action_required": "string",
                      "action_completed_by_staff_uuid": "123e4567-4ed1-48dc-b9f0-21db05a01c1b",
                      "edit_by_staff_uuid": "123e4567-eb5b-4d17-85b5-21db037b2a7b",
                      "create_date": "YYYY-MM-DD HH:MM:SS"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notes"
        ],
        "operationId": "post-Note-single",
        "summary": "Update a Note",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Note",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-5b77-468b-a8f1-21db04bfd46b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "related_object": {
                    "type": "string"
                  },
                  "related_object_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-2e3d-4bba-9fb0-21db0d46300b"
                  },
                  "note": {
                    "type": "string"
                  },
                  "action_required": {
                    "type": "string"
                  },
                  "action_completed_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-bd70-4ac9-bf9b-21db08eadb5b"
                  },
                  "edit_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-cbed-422c-b253-21db0067805b",
                    "readOnly": true,
                    "description": "Staff Member who last modified record"
                  },
                  "create_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "description": "Record creation timestamp"
                  }
                }
              }
            }
          },
          "description": "Note fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Notes"
        ],
        "operationId": "delete-Note-single",
        "summary": "Delete a Note",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Note",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Note successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/queue.json": {
      "get": {
        "tags": [
          "Job Queues"
        ],
        "operationId": "get-Queue-all",
        "summary": "List all Job Queues",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_queues**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_job_queues"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Job Queues",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-3db0-421d-bdbd-21db0b467dab"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "name": {
                        "type": "string"
                      },
                      "default_timeframe": {
                        "type": "number"
                      },
                      "subscribed_staff": {
                        "type": "string"
                      },
                      "requires_assignment": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "description": "\n\nValid values are [0,1]"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-10c4-402d-bf85-21db09794fcb",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "name": "string",
                        "default_timeframe": "number",
                        "subscribed_staff": "string",
                        "requires_assignment": "number"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Queues"
        ],
        "operationId": "post-Queue-create",
        "summary": "Create a new Job Queue",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_queues**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_queues"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-3db0-421d-bdbd-21db0b467dab"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string"
                  },
                  "default_timeframe": {
                    "type": "number"
                  },
                  "subscribed_staff": {
                    "type": "string"
                  },
                  "requires_assignment": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "\n\nValid values are [0,1]"
                  }
                }
              }
            }
          },
          "description": "Job Queue record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Job Queue record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/queue/{uuid}.json": {
      "get": {
        "tags": [
          "Job Queues"
        ],
        "operationId": "get-Queue-single",
        "summary": "Retrieve a Job Queue",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_queues**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_job_queues"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Queue",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job Queue record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-3db0-421d-bdbd-21db0b467dab"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "name": {
                      "type": "string"
                    },
                    "default_timeframe": {
                      "type": "number"
                    },
                    "subscribed_staff": {
                      "type": "string"
                    },
                    "requires_assignment": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "description": "\n\nValid values are [0,1]"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-1990-438a-98be-21db06db2d5b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "name": "string",
                      "default_timeframe": "number",
                      "subscribed_staff": "string",
                      "requires_assignment": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Queues"
        ],
        "operationId": "post-Queue-single",
        "summary": "Update a Job Queue",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_queues**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_queues"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Queue",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-3db0-421d-bdbd-21db0b467dab"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string"
                  },
                  "default_timeframe": {
                    "type": "number"
                  },
                  "subscribed_staff": {
                    "type": "string"
                  },
                  "requires_assignment": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "\n\nValid values are [0,1]"
                  }
                }
              }
            }
          },
          "description": "Job Queue fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Queues"
        ],
        "operationId": "delete-Queue-single",
        "summary": "Delete a Job Queue",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_queues**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_queues"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Job Queue",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job Queue successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/securityrole.json": {
      "get": {
        "tags": [
          "Security Roles"
        ],
        "operationId": "get-SecurityRole-all",
        "summary": "List all Security Roles",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Security Roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-7188-4533-9b12-21db066c13db"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name given to the security role",
                        "maxLength": 50
                      },
                      "role_description": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-9f0a-4189-b4d1-21db09e783eb",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "name": "string",
                        "role_description": "string"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Security Roles"
        ],
        "operationId": "post-SecurityRole-create",
        "summary": "Create a new Security Role",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-7188-4533-9b12-21db066c13db"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name given to the security role",
                    "maxLength": 50
                  },
                  "role_description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Security Role record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Security Role record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/securityrole/{uuid}.json": {
      "get": {
        "tags": [
          "Security Roles"
        ],
        "operationId": "get-SecurityRole-single",
        "summary": "Retrieve a Security Role",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Security Role",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Security Role record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-7188-4533-9b12-21db066c13db"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name given to the security role",
                      "maxLength": 50
                    },
                    "role_description": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-7597-4e13-a9c2-21db0d522e2b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "name": "string",
                      "role_description": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Security Roles"
        ],
        "operationId": "post-SecurityRole-single",
        "summary": "Update a Security Role",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Security Role",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-7188-4533-9b12-21db066c13db"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name given to the security role",
                    "maxLength": 50
                  },
                  "role_description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Security Role fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Security Roles"
        ],
        "operationId": "delete-SecurityRole-single",
        "summary": "Delete a Security Role",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Security Role",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Security Role successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smstemplate.json": {
      "get": {
        "tags": [
          "SMS Templates"
        ],
        "operationId": "get-SmsTemplate-all",
        "summary": "List all SMS Templates",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of SMS Templates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-f872-4ac2-8e70-21db085c492b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 50
                      },
                      "message": {
                        "type": "string",
                        "maxLength": 612
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-5c2c-4d23-9c13-21db099401ab",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "name": "string",
                        "message": "string"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SMS Templates"
        ],
        "operationId": "post-SmsTemplate-create",
        "summary": "Create a new SMS Template",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-f872-4ac2-8e70-21db085c492b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "message": {
                    "type": "string",
                    "maxLength": 612
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "SMS Template record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created SMS Template record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smstemplate/{uuid}.json": {
      "get": {
        "tags": [
          "SMS Templates"
        ],
        "operationId": "get-SmsTemplate-single",
        "summary": "Retrieve a SMS Template",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the SMS Template",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SMS Template record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-f872-4ac2-8e70-21db085c492b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 50
                    },
                    "message": {
                      "type": "string",
                      "maxLength": 612
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-068f-4fec-ac2a-21db015465fb",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "name": "string",
                      "message": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SMS Templates"
        ],
        "operationId": "post-SmsTemplate-single",
        "summary": "Update a SMS Template",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the SMS Template",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-f872-4ac2-8e70-21db085c492b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "message": {
                    "type": "string",
                    "maxLength": 612
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "SMS Template fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SMS Templates"
        ],
        "operationId": "delete-SmsTemplate-single",
        "summary": "Delete a SMS Template",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the SMS Template",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SMS Template successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/staff.json": {
      "get": {
        "tags": [
          "Staff Members"
        ],
        "operationId": "get-Staff-all",
        "summary": "List all Staff Members",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_staff**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_staff"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Staff Members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-e2a2-4517-a16f-21db0472b58b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "first": {
                        "type": "string",
                        "description": "Staff First Name",
                        "maxLength": 30
                      },
                      "last": {
                        "type": "string",
                        "description": "Staff Last Name",
                        "maxLength": 30
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Staff Email Address. This is also your login name."
                      },
                      "mobile": {
                        "type": "string"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float"
                      },
                      "lat": {
                        "type": "number",
                        "format": "float"
                      },
                      "geo_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "job_title": {
                        "type": "string"
                      },
                      "navigating_to_job_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-50b1-449c-b34e-21db017f019b"
                      },
                      "navigating_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "navigating_expiry_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "color": {
                        "type": "string"
                      },
                      "custom_icon_url": {
                        "type": "string"
                      },
                      "status_message": {
                        "type": "string"
                      },
                      "status_message_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "can_receive_push_notification": {
                        "type": "string"
                      },
                      "hide_from_schedule": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "description": "\n\nValid values are [0,1]"
                      },
                      "security_role_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-fecf-43fc-a2be-21db0329776b"
                      }
                    },
                    "required": [
                      "first",
                      "last"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-4864-4ae1-9e44-21db014eb25b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "first": "string",
                        "last": "string",
                        "email": "string",
                        "mobile": "string",
                        "lng": "number",
                        "lat": "number",
                        "geo_timestamp": "YYYY-MM-DD HH:MM:SS",
                        "job_title": "string",
                        "navigating_to_job_uuid": "123e4567-dac1-41fb-9663-21db096547ab",
                        "navigating_timestamp": "YYYY-MM-DD HH:MM:SS",
                        "navigating_expiry_timestamp": "YYYY-MM-DD HH:MM:SS",
                        "color": "string",
                        "custom_icon_url": "string",
                        "status_message": "string",
                        "status_message_timestamp": "YYYY-MM-DD HH:MM:SS",
                        "can_receive_push_notification": "string",
                        "hide_from_schedule": "number",
                        "security_role_uuid": "123e4567-e09f-4cc2-bb06-21db03b7478b"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Staff Members"
        ],
        "operationId": "post-Staff-create",
        "summary": "Create a new Staff Member",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_staff**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_staff"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-e2a2-4517-a16f-21db0472b58b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "first": {
                    "type": "string",
                    "description": "Staff First Name",
                    "maxLength": 30
                  },
                  "last": {
                    "type": "string",
                    "description": "Staff Last Name",
                    "maxLength": 30
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Staff Email Address. This is also your login name."
                  },
                  "mobile": {
                    "type": "string"
                  },
                  "lng": {
                    "type": "number",
                    "format": "float"
                  },
                  "lat": {
                    "type": "number",
                    "format": "float"
                  },
                  "geo_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "job_title": {
                    "type": "string"
                  },
                  "navigating_to_job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-50b1-449c-b34e-21db017f019b"
                  },
                  "navigating_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "navigating_expiry_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "color": {
                    "type": "string"
                  },
                  "custom_icon_url": {
                    "type": "string"
                  },
                  "status_message": {
                    "type": "string"
                  },
                  "status_message_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "can_receive_push_notification": {
                    "type": "string"
                  },
                  "hide_from_schedule": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "\n\nValid values are [0,1]"
                  },
                  "security_role_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-fecf-43fc-a2be-21db0329776b"
                  }
                },
                "required": [
                  "first",
                  "last"
                ]
              }
            }
          },
          "description": "Staff Member record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Staff Member record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/staff/{uuid}.json": {
      "get": {
        "tags": [
          "Staff Members"
        ],
        "operationId": "get-Staff-single",
        "summary": "Retrieve a Staff Member",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_staff**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_staff"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Staff Member",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Staff Member record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-e2a2-4517-a16f-21db0472b58b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "first": {
                      "type": "string",
                      "description": "Staff First Name",
                      "maxLength": 30
                    },
                    "last": {
                      "type": "string",
                      "description": "Staff Last Name",
                      "maxLength": 30
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "description": "Staff Email Address. This is also your login name."
                    },
                    "mobile": {
                      "type": "string"
                    },
                    "lng": {
                      "type": "number",
                      "format": "float"
                    },
                    "lat": {
                      "type": "number",
                      "format": "float"
                    },
                    "geo_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "job_title": {
                      "type": "string"
                    },
                    "navigating_to_job_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-50b1-449c-b34e-21db017f019b"
                    },
                    "navigating_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "navigating_expiry_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "color": {
                      "type": "string"
                    },
                    "custom_icon_url": {
                      "type": "string"
                    },
                    "status_message": {
                      "type": "string"
                    },
                    "status_message_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "can_receive_push_notification": {
                      "type": "string"
                    },
                    "hide_from_schedule": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "description": "\n\nValid values are [0,1]"
                    },
                    "security_role_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-fecf-43fc-a2be-21db0329776b"
                    }
                  },
                  "required": [
                    "first",
                    "last"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-e652-42ef-b687-21db059ae88b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "first": "string",
                      "last": "string",
                      "email": "string",
                      "mobile": "string",
                      "lng": "number",
                      "lat": "number",
                      "geo_timestamp": "YYYY-MM-DD HH:MM:SS",
                      "job_title": "string",
                      "navigating_to_job_uuid": "123e4567-f148-431e-a737-21db0d75e29b",
                      "navigating_timestamp": "YYYY-MM-DD HH:MM:SS",
                      "navigating_expiry_timestamp": "YYYY-MM-DD HH:MM:SS",
                      "color": "string",
                      "custom_icon_url": "string",
                      "status_message": "string",
                      "status_message_timestamp": "YYYY-MM-DD HH:MM:SS",
                      "can_receive_push_notification": "string",
                      "hide_from_schedule": "number",
                      "security_role_uuid": "123e4567-f809-4fae-88da-21db0866356b"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Staff Members"
        ],
        "operationId": "post-Staff-single",
        "summary": "Update a Staff Member",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_staff**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_staff"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Staff Member",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-e2a2-4517-a16f-21db0472b58b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "first": {
                    "type": "string",
                    "description": "Staff First Name",
                    "maxLength": 30
                  },
                  "last": {
                    "type": "string",
                    "description": "Staff Last Name",
                    "maxLength": 30
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Staff Email Address. This is also your login name."
                  },
                  "mobile": {
                    "type": "string"
                  },
                  "lng": {
                    "type": "number",
                    "format": "float"
                  },
                  "lat": {
                    "type": "number",
                    "format": "float"
                  },
                  "geo_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "job_title": {
                    "type": "string"
                  },
                  "navigating_to_job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-50b1-449c-b34e-21db017f019b"
                  },
                  "navigating_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "navigating_expiry_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "color": {
                    "type": "string"
                  },
                  "custom_icon_url": {
                    "type": "string"
                  },
                  "status_message": {
                    "type": "string"
                  },
                  "status_message_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "can_receive_push_notification": {
                    "type": "string"
                  },
                  "hide_from_schedule": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "\n\nValid values are [0,1]"
                  },
                  "security_role_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-fecf-43fc-a2be-21db0329776b"
                  }
                },
                "required": [
                  "first",
                  "last"
                ]
              }
            }
          },
          "description": "Staff Member fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Staff Members"
        ],
        "operationId": "delete-Staff-single",
        "summary": "Delete a Staff Member",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_staff**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_staff"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Staff Member",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Staff Member successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/staffmessage.json": {
      "get": {
        "tags": [
          "Staff Messages"
        ],
        "operationId": "get-StaffMessage-all",
        "summary": "List all Staff Messages",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Staff Messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-a21f-4407-9561-21db081478fb"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "from_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-6b83-4841-a484-21db03b38f1b"
                      },
                      "to_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-a9b8-44d8-9e85-21db0d100f8b"
                      },
                      "sent_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "delivered_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "read_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "message": {
                        "type": "string"
                      },
                      "regarding_job_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-5ad3-4c4a-80db-21db045cb7eb"
                      },
                      "attached_json": {
                        "type": "string"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-4959-4446-be99-21db0813407b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "from_staff_uuid": "123e4567-5326-41f4-90b1-21db0f6edefb",
                        "to_staff_uuid": "123e4567-db84-4050-a0ce-21db0874240b",
                        "sent_timestamp": "YYYY-MM-DD HH:MM:SS",
                        "delivered_timestamp": "YYYY-MM-DD HH:MM:SS",
                        "read_timestamp": "YYYY-MM-DD HH:MM:SS",
                        "message": "string",
                        "regarding_job_uuid": "123e4567-612c-40e1-98d5-21db043e669b",
                        "attached_json": "string"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Staff Messages"
        ],
        "operationId": "post-StaffMessage-create",
        "summary": "Create a new Staff Message",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-a21f-4407-9561-21db081478fb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "from_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-6b83-4841-a484-21db03b38f1b"
                  },
                  "to_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-a9b8-44d8-9e85-21db0d100f8b"
                  },
                  "sent_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "delivered_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "read_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "message": {
                    "type": "string"
                  },
                  "regarding_job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-5ad3-4c4a-80db-21db045cb7eb"
                  },
                  "attached_json": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Staff Message record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Staff Message record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/staffmessage/{uuid}.json": {
      "get": {
        "tags": [
          "Staff Messages"
        ],
        "operationId": "get-StaffMessage-single",
        "summary": "Retrieve a Staff Message",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Staff Message",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Staff Message record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-a21f-4407-9561-21db081478fb"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "from_staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-6b83-4841-a484-21db03b38f1b"
                    },
                    "to_staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-a9b8-44d8-9e85-21db0d100f8b"
                    },
                    "sent_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "delivered_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "read_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "message": {
                      "type": "string"
                    },
                    "regarding_job_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-5ad3-4c4a-80db-21db045cb7eb"
                    },
                    "attached_json": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-5311-429d-b64c-21db06b8830b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "from_staff_uuid": "123e4567-f068-440a-8497-21db05547e3b",
                      "to_staff_uuid": "123e4567-5814-4580-9749-21db011a102b",
                      "sent_timestamp": "YYYY-MM-DD HH:MM:SS",
                      "delivered_timestamp": "YYYY-MM-DD HH:MM:SS",
                      "read_timestamp": "YYYY-MM-DD HH:MM:SS",
                      "message": "string",
                      "regarding_job_uuid": "123e4567-9f32-4476-ae73-21db0271cf1b",
                      "attached_json": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Staff Messages"
        ],
        "operationId": "post-StaffMessage-single",
        "summary": "Update a Staff Message",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Staff Message",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-a21f-4407-9561-21db081478fb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "from_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-6b83-4841-a484-21db03b38f1b"
                  },
                  "to_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-a9b8-44d8-9e85-21db0d100f8b"
                  },
                  "sent_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "delivered_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "read_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "message": {
                    "type": "string"
                  },
                  "regarding_job_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-5ad3-4c4a-80db-21db045cb7eb"
                  },
                  "attached_json": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Staff Message fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Staff Messages"
        ],
        "operationId": "delete-StaffMessage-single",
        "summary": "Delete a Staff Message",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Staff Message",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Staff Message successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task.json": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "operationId": "get-Task-all",
        "summary": "List all Tasks",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_tasks**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_tasks"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-0078-496e-85d6-21db0c7a35fb"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "due_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD"
                      },
                      "task_details": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "related_object": {
                        "type": "string"
                      },
                      "related_object_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-d8ee-4433-976b-21db0b7ecd6b"
                      },
                      "task_complete": {
                        "type": "string"
                      },
                      "completed_timestamp": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS"
                      },
                      "completed_by_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-2acf-48bc-ae41-21db02c2208b"
                      },
                      "assigned_to_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-4218-4b45-ae12-21db0172071b"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float"
                      },
                      "lat": {
                        "type": "number",
                        "format": "float"
                      },
                      "created_by_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-f551-46e5-8450-21db01069a0b"
                      },
                      "create_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "description": "Record creation timestamp"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-20ac-46c6-8249-21db0144230b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "due_date": "YYYY-MM-DD",
                        "task_details": "string",
                        "name": "string",
                        "related_object": "string",
                        "related_object_uuid": "123e4567-33dd-40f1-9c2b-21db05c7080b",
                        "task_complete": "string",
                        "completed_timestamp": "YYYY-MM-DD HH:MM:SS",
                        "completed_by_staff_uuid": "123e4567-6132-43a8-b1fb-21db0061f78b",
                        "assigned_to_staff_uuid": "123e4567-0e1d-4b2d-b4aa-21db047ccf3b",
                        "lng": "number",
                        "lat": "number",
                        "created_by_staff_uuid": "123e4567-32d5-47f7-8315-21db03689e3b",
                        "create_date": "YYYY-MM-DD HH:MM:SS"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "operationId": "post-Task-create",
        "summary": "Create a new Task",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_tasks**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_tasks"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-0078-496e-85d6-21db0c7a35fb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "due_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD"
                  },
                  "task_details": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "related_object": {
                    "type": "string"
                  },
                  "related_object_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-d8ee-4433-976b-21db0b7ecd6b"
                  },
                  "task_complete": {
                    "type": "string"
                  },
                  "completed_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "completed_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-2acf-48bc-ae41-21db02c2208b"
                  },
                  "assigned_to_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-4218-4b45-ae12-21db0172071b"
                  },
                  "lng": {
                    "type": "number",
                    "format": "float"
                  },
                  "lat": {
                    "type": "number",
                    "format": "float"
                  },
                  "created_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-f551-46e5-8450-21db01069a0b"
                  },
                  "create_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "description": "Record creation timestamp"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Task record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Task record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/{uuid}.json": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "operationId": "get-Task-single",
        "summary": "Retrieve a Task",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_tasks**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_tasks"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Task",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-0078-496e-85d6-21db0c7a35fb"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "due_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD"
                    },
                    "task_details": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "related_object": {
                      "type": "string"
                    },
                    "related_object_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-d8ee-4433-976b-21db0b7ecd6b"
                    },
                    "task_complete": {
                      "type": "string"
                    },
                    "completed_timestamp": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "completed_by_staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-2acf-48bc-ae41-21db02c2208b"
                    },
                    "assigned_to_staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-4218-4b45-ae12-21db0172071b"
                    },
                    "lng": {
                      "type": "number",
                      "format": "float"
                    },
                    "lat": {
                      "type": "number",
                      "format": "float"
                    },
                    "created_by_staff_uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-f551-46e5-8450-21db01069a0b"
                    },
                    "create_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "description": "Record creation timestamp"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-88d4-4148-b552-21db0a1469eb",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "due_date": "YYYY-MM-DD",
                      "task_details": "string",
                      "name": "string",
                      "related_object": "string",
                      "related_object_uuid": "123e4567-925c-445f-ab5f-21db03fcce0b",
                      "task_complete": "string",
                      "completed_timestamp": "YYYY-MM-DD HH:MM:SS",
                      "completed_by_staff_uuid": "123e4567-e17f-457e-8e9c-21db087fd20b",
                      "assigned_to_staff_uuid": "123e4567-4c23-41e3-ae15-21db0f64f23b",
                      "lng": "number",
                      "lat": "number",
                      "created_by_staff_uuid": "123e4567-9e59-44e9-a239-21db01633d7b",
                      "create_date": "YYYY-MM-DD HH:MM:SS"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "operationId": "post-Task-single",
        "summary": "Update a Task",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_tasks**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_tasks"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Task",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-0078-496e-85d6-21db0c7a35fb"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "due_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD"
                  },
                  "task_details": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "related_object": {
                    "type": "string"
                  },
                  "related_object_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-d8ee-4433-976b-21db0b7ecd6b"
                  },
                  "task_complete": {
                    "type": "string"
                  },
                  "completed_timestamp": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS"
                  },
                  "completed_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-2acf-48bc-ae41-21db02c2208b"
                  },
                  "assigned_to_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-4218-4b45-ae12-21db0172071b"
                  },
                  "lng": {
                    "type": "number",
                    "format": "float"
                  },
                  "lat": {
                    "type": "number",
                    "format": "float"
                  },
                  "created_by_staff_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-f551-46e5-8450-21db01069a0b"
                  },
                  "create_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "description": "Record creation timestamp"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Task fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "operationId": "delete-Task-single",
        "summary": "Delete a Task",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_tasks**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_tasks"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Task",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/taxrate.json": {
      "get": {
        "tags": [
          "Tax Rates"
        ],
        "operationId": "get-TaxRate-all",
        "summary": "List all Tax Rates",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Tax Rates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-ea93-44d1-a0b1-21db0045458b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 50
                      },
                      "amount": {
                        "type": "string"
                      },
                      "is_default_tax_rate": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "description": "\n\nValid values are [0,1]"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-2161-40d3-be06-21db03c5331b",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "name": "string",
                        "amount": "string",
                        "is_default_tax_rate": "number"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tax Rates"
        ],
        "operationId": "post-TaxRate-create",
        "summary": "Create a new Tax Rate",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-ea93-44d1-a0b1-21db0045458b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "amount": {
                    "type": "string"
                  },
                  "is_default_tax_rate": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "\n\nValid values are [0,1]"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Tax Rate record to create",
          "required": true
        },
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "description": "UUID of newly created Tax Rate record",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/taxrate/{uuid}.json": {
      "get": {
        "tags": [
          "Tax Rates"
        ],
        "operationId": "get-TaxRate-single",
        "summary": "Retrieve a Tax Rate",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Tax Rate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tax Rate record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-ea93-44d1-a0b1-21db0045458b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 50
                    },
                    "amount": {
                      "type": "string"
                    },
                    "is_default_tax_rate": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "description": "\n\nValid values are [0,1]"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-99c8-4f37-bc43-21db0547015b",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "name": "string",
                      "amount": "string",
                      "is_default_tax_rate": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tax Rates"
        ],
        "operationId": "post-TaxRate-single",
        "summary": "Update a Tax Rate",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Tax Rate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-ea93-44d1-a0b1-21db0045458b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "amount": {
                    "type": "string"
                  },
                  "is_default_tax_rate": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "\n\nValid values are [0,1]"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Tax Rate fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tax Rates"
        ],
        "operationId": "delete-TaxRate-single",
        "summary": "Delete a Tax Rate",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Tax Rate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tax Rate successfully archived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vendor.json": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "operationId": "get-Vendor-all",
        "summary": "List all Vendors",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **vendor**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "vendor"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Vendors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Record UUID key",
                        "example": "123e4567-a166-4076-8950-21db0ceabc4b"
                      },
                      "active": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "default": 1,
                        "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                      },
                      "edit_date": {
                        "type": "string",
                        "example": "YYYY-MM-DD HH:MM:SS",
                        "readOnly": true,
                        "description": "Record last modified timestamp"
                      },
                      "name": {
                        "type": "string",
                        "description": "Company Name",
                        "maxLength": 200
                      },
                      "abn_number": {
                        "type": "string",
                        "description": "Company ABN Number (Australian Accounts Only)"
                      },
                      "business_number": {
                        "type": "string"
                      },
                      "website": {
                        "type": "string",
                        "description": "Company Website address",
                        "maxLength": 100
                      },
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "email_accounts": {
                        "type": "string"
                      },
                      "billing_address": {
                        "type": "string"
                      },
                      "accepted_payment_methods": {
                        "type": "string"
                      },
                      "default_region": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "opening_time_monday": {
                        "type": "string"
                      },
                      "closing_time_monday": {
                        "type": "string"
                      },
                      "opening_time_tuesday": {
                        "type": "string"
                      },
                      "closing_time_tuesday": {
                        "type": "string"
                      },
                      "opening_time_wednesday": {
                        "type": "string"
                      },
                      "closing_time_wednesday": {
                        "type": "string"
                      },
                      "opening_time_thursday": {
                        "type": "string"
                      },
                      "closing_time_thursday": {
                        "type": "string"
                      },
                      "opening_time_friday": {
                        "type": "string"
                      },
                      "closing_time_friday": {
                        "type": "string"
                      },
                      "opening_time_saturday": {
                        "type": "string"
                      },
                      "closing_time_saturday": {
                        "type": "string"
                      },
                      "opening_time_sunday": {
                        "type": "string"
                      },
                      "closing_time_sunday": {
                        "type": "string"
                      },
                      "timezone_name": {
                        "type": "string"
                      },
                      "invoice_terms": {
                        "type": "string"
                      },
                      "job_default_status": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "uuid": "123e4567-f221-4a02-ac4d-21db09dd68cb",
                        "active": 1,
                        "edit_date": "YYYY-MM-DD HH:MM:SS",
                        "name": "string",
                        "abn_number": "string",
                        "business_number": "string",
                        "website": "string",
                        "email": "string",
                        "email_accounts": "string",
                        "billing_address": "string",
                        "accepted_payment_methods": "string",
                        "default_region": "string",
                        "currency": "string",
                        "opening_time_monday": "string",
                        "closing_time_monday": "string",
                        "opening_time_tuesday": "string",
                        "closing_time_tuesday": "string",
                        "opening_time_wednesday": "string",
                        "closing_time_wednesday": "string",
                        "opening_time_thursday": "string",
                        "closing_time_thursday": "string",
                        "opening_time_friday": "string",
                        "closing_time_friday": "string",
                        "opening_time_saturday": "string",
                        "closing_time_saturday": "string",
                        "opening_time_sunday": "string",
                        "closing_time_sunday": "string",
                        "timezone_name": "string",
                        "invoice_terms": "string",
                        "job_default_status": "string"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vendor/{uuid}.json": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "operationId": "get-Vendor-single",
        "summary": "Retrieve a Vendor",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **vendor**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "vendor"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Vendor",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vendor record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Record UUID key",
                      "example": "123e4567-a166-4076-8950-21db0ceabc4b"
                    },
                    "active": {
                      "type": "number",
                      "enum": [
                        0,
                        1
                      ],
                      "default": 1,
                      "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                    },
                    "edit_date": {
                      "type": "string",
                      "example": "YYYY-MM-DD HH:MM:SS",
                      "readOnly": true,
                      "description": "Record last modified timestamp"
                    },
                    "name": {
                      "type": "string",
                      "description": "Company Name",
                      "maxLength": 200
                    },
                    "abn_number": {
                      "type": "string",
                      "description": "Company ABN Number (Australian Accounts Only)"
                    },
                    "business_number": {
                      "type": "string"
                    },
                    "website": {
                      "type": "string",
                      "description": "Company Website address",
                      "maxLength": 100
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "email_accounts": {
                      "type": "string"
                    },
                    "billing_address": {
                      "type": "string"
                    },
                    "accepted_payment_methods": {
                      "type": "string"
                    },
                    "default_region": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "opening_time_monday": {
                      "type": "string"
                    },
                    "closing_time_monday": {
                      "type": "string"
                    },
                    "opening_time_tuesday": {
                      "type": "string"
                    },
                    "closing_time_tuesday": {
                      "type": "string"
                    },
                    "opening_time_wednesday": {
                      "type": "string"
                    },
                    "closing_time_wednesday": {
                      "type": "string"
                    },
                    "opening_time_thursday": {
                      "type": "string"
                    },
                    "closing_time_thursday": {
                      "type": "string"
                    },
                    "opening_time_friday": {
                      "type": "string"
                    },
                    "closing_time_friday": {
                      "type": "string"
                    },
                    "opening_time_saturday": {
                      "type": "string"
                    },
                    "closing_time_saturday": {
                      "type": "string"
                    },
                    "opening_time_sunday": {
                      "type": "string"
                    },
                    "closing_time_sunday": {
                      "type": "string"
                    },
                    "timezone_name": {
                      "type": "string"
                    },
                    "invoice_terms": {
                      "type": "string"
                    },
                    "job_default_status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "uuid": "123e4567-dc49-42f0-a96b-21db08dc7abb",
                      "active": 1,
                      "edit_date": "YYYY-MM-DD HH:MM:SS",
                      "name": "string",
                      "abn_number": "string",
                      "business_number": "string",
                      "website": "string",
                      "email": "string",
                      "email_accounts": "string",
                      "billing_address": "string",
                      "accepted_payment_methods": "string",
                      "default_region": "string",
                      "currency": "string",
                      "opening_time_monday": "string",
                      "closing_time_monday": "string",
                      "opening_time_tuesday": "string",
                      "closing_time_tuesday": "string",
                      "opening_time_wednesday": "string",
                      "closing_time_wednesday": "string",
                      "opening_time_thursday": "string",
                      "closing_time_thursday": "string",
                      "opening_time_friday": "string",
                      "closing_time_friday": "string",
                      "opening_time_saturday": "string",
                      "closing_time_saturday": "string",
                      "opening_time_sunday": "string",
                      "closing_time_sunday": "string",
                      "timezone_name": "string",
                      "invoice_terms": "string",
                      "job_default_status": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vendors"
        ],
        "operationId": "post-Vendor-single",
        "summary": "Update a Vendor",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the Vendor",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Record UUID key",
                    "example": "123e4567-a166-4076-8950-21db0ceabc4b"
                  },
                  "active": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "default": 1,
                    "description": "Record active/deleted flag. \n\nValid values are [0,1]"
                  },
                  "edit_date": {
                    "type": "string",
                    "example": "YYYY-MM-DD HH:MM:SS",
                    "readOnly": true,
                    "description": "Record last modified timestamp"
                  },
                  "name": {
                    "type": "string",
                    "description": "Company Name",
                    "maxLength": 200
                  },
                  "abn_number": {
                    "type": "string",
                    "description": "Company ABN Number (Australian Accounts Only)"
                  },
                  "business_number": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string",
                    "description": "Company Website address",
                    "maxLength": 100
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "email_accounts": {
                    "type": "string"
                  },
                  "billing_address": {
                    "type": "string"
                  },
                  "accepted_payment_methods": {
                    "type": "string"
                  },
                  "default_region": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "opening_time_monday": {
                    "type": "string"
                  },
                  "closing_time_monday": {
                    "type": "string"
                  },
                  "opening_time_tuesday": {
                    "type": "string"
                  },
                  "closing_time_tuesday": {
                    "type": "string"
                  },
                  "opening_time_wednesday": {
                    "type": "string"
                  },
                  "closing_time_wednesday": {
                    "type": "string"
                  },
                  "opening_time_thursday": {
                    "type": "string"
                  },
                  "closing_time_thursday": {
                    "type": "string"
                  },
                  "opening_time_friday": {
                    "type": "string"
                  },
                  "closing_time_friday": {
                    "type": "string"
                  },
                  "opening_time_saturday": {
                    "type": "string"
                  },
                  "closing_time_saturday": {
                    "type": "string"
                  },
                  "opening_time_sunday": {
                    "type": "string"
                  },
                  "closing_time_sunday": {
                    "type": "string"
                  },
                  "timezone_name": {
                    "type": "string"
                  },
                  "invoice_terms": {
                    "type": "string"
                  },
                  "job_default_status": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": "Vendor fields to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "0"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "0",
                      "message": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "errorCode": "1000",
                      "message": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "number",
                      "format": "int32",
                      "example": "1000"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred completing your request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api.servicem8.com/api_1.0"
    }
  ],
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://api.servicem8.com/oauth/authorize",
            "tokenUrl": "https://api.servicem8.com/oauth/access_token",
            "scopes": {
              "staff_locations": "Access to real-time GPS information about staff",
              "staff_activity": "Access to clock on, lunch break and clock off information about staff",
              "publish_sms": "Access to send SMS messages to customers and/or staff on your behalf. Note sending SMS messages will incur account charges.",
              "publish_email": "Access to send Email messages to customers and/or staff on your behalf",
              "vendor": "Access to basic account information",
              "vendor_logo": "Access to account logo",
              "vendor_email": "Access to account holder email address",
              "read_locations": "Read-only access to Location Endpoint",
              "manage_locations": "Full access to Location Endpoint",
              "read_staff": "Read-only access to Staff Endpoint",
              "manage_staff": "Full access to Staff Endpoint",
              "read_customers": "Read-only access to Company Endpoint",
              "manage_customers": "Full access to Company Endpoint",
              "read_customer_contacts": "Read-only access to CompanyContact Endpoint",
              "manage_customer_contacts": "Full access to CompanyContact Endpoint",
              "read_jobs": "Read-only access to Job Endpoint",
              "manage_jobs": "Full access to Job Endpoint",
              "create_jobs": "Ability to create jobs on behalf of account. Note creating jobs may incur account charges.",
              "read_job_contacts": "Read-only access to JobContact Endpoint",
              "manage_job_contacts": "Full access to JobContact Endpoint",
              "read_job_materials": "Read-only access to JobMaterials Endpoint",
              "manage_job_materials": "Full access to JobMaterials Endpoint",
              "read_job_categories": "Read-only access to Categories Endpoint",
              "manage_job_categories": "Full access to Categories Endpoint",
              "read_job_queues": "Read-only access to Job Queues Endpoint",
              "manage_job_queues": "Full access to Job Queues Endpoint",
              "read_tasks": "Read-only access to Tasks Endpoint",
              "manage_tasks": "Full access to Tasks Endpoint",
              "read_schedule": "Read-only access to JobActivity Endpoint",
              "manage_schedule": "Full access to JobActivity Endpoint",
              "read_inventory": "Read-only access to Materials Endpoint",
              "manage_inventory": "Full access to Materials Endpoint",
              "read_job_notes": "Read-only access to job notes",
              "publish_job_notes": "Ability to add new job notes",
              "read_job_photos": "Read-only access to job photos",
              "publish_job_photos": "Ability to add new job photos",
              "read_attachments": "Read-only access to Attachments Endpoint",
              "manage_attachments": "Full access to Attachments Endpoint",
              "read_inbox": "Read-only access to inbox messages",
              "read_messages": "Read-only access to staff messages",
              "manage_notifications": "Ability to read notifications and mark as read",
              "manage_templates": "Full-access to email, sms and document templates",
              "manage_badges": "Full-access to create/modify job badges"
            }
          }
        }
      }
    },
    "schemas": {
      "Result": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "number",
            "format": "int32",
            "example": "0"
          },
          "message": {
            "type": "string",
            "example": "OK"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "number",
            "format": "int32",
            "example": "1000"
          },
          "message": {
            "type": "string",
            "example": "An error occurred completing your request"
          }
        }
      },
      "AllocationWindow": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-b7f9-4230-b88e-21db00c9909b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "name": {
            "type": "string"
          },
          "start_time": {
            "type": "number"
          },
          "end_time": {
            "type": "number"
          },
          "sort_priority": {
            "type": "number"
          }
        }
      },
      "Asset": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-9454-4e1d-a1af-21db0054f25b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "company_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-200b-4f8e-a56f-21db08b7388b",
            "description": "UUID of the Client to which this Asset is attached"
          },
          "asset_code": {
            "type": "string",
            "description": "The unique code printed on this Asset's attached label (read only) (Read-only)"
          },
          "asset_type_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-5b49-4fa0-8a7f-21db0b7c1acb",
            "description": "UUID of an Asset Type which defines the fields that can be stored for this Asset (read only) (Read-only)"
          },
          "name": {
            "type": "string",
            "description": "User-facing description of this asset",
            "maxLength": 100
          },
          "lat": {
            "type": "number",
            "format": "float",
            "description": "Latitude component of the Asset's location in degrees"
          },
          "lng": {
            "type": "number",
            "format": "float",
            "description": "Longitude component of the Asset's location in degrees"
          },
          "geo_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "description": "Timestamp at which the Asset's location was last updated"
          },
          "altitude": {
            "type": "number",
            "description": "Altitude component of the Asset's location in metres"
          },
          "field_data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Must be the UUID of an AssetTypeField"
                },
                "fieldType": {
                  "type": "string"
                },
                "fieldName": {
                  "type": "string"
                },
                "fieldValue": {
                  "type": "string",
                  "description": "Convert all values to string. Dates shall be in Y-m-d format."
                },
                "sortOrder": {
                  "type": "number"
                }
              },
              "required": [
                "uuid",
                "fieldType",
                "fieldName",
                "fieldValue",
                "sortOrder"
              ]
            }
          }
        }
      },
      "AssetType": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-5549-4fa6-87a1-21db0bf239eb"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AssetTypeField": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-8c80-4103-8755-21db00d93deb"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "asset_type_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-afc7-4f5b-a771-21db0af9958b",
            "description": "(Read-only)"
          },
          "name": {
            "type": "string"
          },
          "field_data": {
            "type": "object",
            "properties": {
              "fieldType": {
                "type": "string",
                "enum": [
                  "Text",
                  "Number",
                  "Date",
                  "Multiple Choice"
                ]
              },
              "mandatory": {
                "type": "boolean"
              },
              "choices": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "fieldType",
              "mandatory"
            ]
          },
          "sort_order": {
            "type": "number"
          }
        },
        "required": [
          "name"
        ]
      },
      "Attachment": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-1d49-48ad-9fa3-21db0b95d0db"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "related_object": {
            "type": "string"
          },
          "related_object_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-46be-44bc-bba4-21db0709e07b"
          },
          "attachment_name": {
            "type": "string"
          },
          "file_type": {
            "type": "string"
          },
          "created_by_staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-3b7e-423f-aaca-21db072afdfb"
          },
          "timestamp": {
            "type": "string"
          },
          "attachment_source": {
            "type": "string"
          },
          "tags": {
            "type": "string"
          },
          "lng": {
            "type": "number",
            "format": "float"
          },
          "lat": {
            "type": "number",
            "format": "float"
          },
          "photo_width": {
            "type": "number",
            "description": "(Read-only)"
          },
          "photo_height": {
            "type": "number",
            "description": "(Read-only)"
          },
          "extracted_info": {
            "type": "string"
          },
          "is_favourite": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "description": "\n\nValid values are [0,1]"
          },
          "class_name": {
            "type": "string",
            "description": "(Read-only)"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": true
          },
          "signature_data": {
            "type": "object",
            "description": "(Read-only)",
            "properties": {
              "templateSupportsSignature": {
                "type": "boolean",
                "description": "True if the template from which this document was produced supports signing"
              },
              "documentSnapshotUUID": {
                "type": "string",
                "format": "uuid",
                "description": "The template mergefield snapshot which captured the unsigned document state"
              },
              "documentSnapshotExpiresUnixtime": {
                "type": "number",
                "description": "The unixtime at which the snapshot expires"
              },
              "signedDocumentAttachmentUUID": {
                "type": "string",
                "format": "uuid",
                "description": "If a signed version of this document exists, references the UUID of the attachment"
              },
              "unsignedDocumentAttachmentUUID": {
                "type": "string",
                "format": "uuid",
                "description": "References the UUID of the unsigned version of this document"
              },
              "signatureDetails": {
                "type": "object",
                "properties": {
                  "signatureText": {
                    "type": "string",
                    "description": "Text entered by the signer as the electronic representation of thier signature"
                  },
                  "signatureUnixtime": {
                    "type": "number",
                    "description": "Unixtime at which the document was signed"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Optional additional data regarding the signature event"
                  }
                },
                "required": [
                  "signatureText",
                  "signatureUnixtime"
                ]
              }
            },
            "required": [
              "templateSupportsSignature"
            ]
          }
        }
      },
      "Badge": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-616d-4508-add7-21db0f9e408b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "name": {
            "type": "string",
            "description": "Badge Name",
            "maxLength": 50
          },
          "automatically_allocated": {
            "type": "string"
          },
          "file_name": {
            "type": "string"
          },
          "regarding_form_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e7c4-45fd-b4c6-21db004e8bab"
          },
          "regarding_asset_type_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-6e9b-41be-ba48-21db0150cd6b"
          }
        },
        "required": [
          "name"
        ]
      },
      "Category": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-0cef-48e6-a167-21db07467d0b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "name": {
            "type": "string"
          },
          "colour": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "Company": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-afa7-4fe7-9e76-21db0657c67b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "website": {
            "type": "string"
          },
          "abn_number": {
            "type": "string"
          },
          "is_individual": {
            "type": "string"
          },
          "address_street": {
            "type": "string",
            "maxLength": 500
          },
          "address_city": {
            "type": "string"
          },
          "address_state": {
            "type": "string"
          },
          "address_postcode": {
            "type": "string"
          },
          "address_country": {
            "type": "string"
          },
          "fax_number": {
            "type": "string"
          },
          "address": {
            "type": "string",
            "maxLength": 500
          },
          "billing_address": {
            "type": "string",
            "maxLength": 500
          },
          "badges": {
            "type": "string"
          },
          "tax_rate_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-84a9-4609-bed1-21db0363e31b"
          },
          "billing_attention": {
            "type": "string"
          },
          "payment_terms": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "CompanyContact": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-0267-49a6-8504-21db05a64bfb"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "company_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-28c1-47b2-a250-21db0788cd4b"
          },
          "first": {
            "type": "string"
          },
          "last": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "type": {
            "type": "string"
          },
          "is_primary_contact": {
            "type": "string"
          }
        }
      },
      "EmailTemplate": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-6962-4602-966e-21db00a6b57b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "name": {
            "type": "string",
            "maxLength": 50
          },
          "subject": {
            "type": "string",
            "maxLength": 100
          },
          "message": {
            "type": "string",
            "maxLength": 1000
          }
        },
        "required": [
          "name"
        ]
      },
      "Feedback": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-6cdd-447b-ae0b-21db02182d7b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "timestamp": {
            "type": "string"
          },
          "related_object": {
            "type": "string"
          },
          "related_object_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-8d79-4d4d-8a6b-21db0dedc92b"
          },
          "rating": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "Form": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-e417-4322-a5db-21db05dc729b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "name": {
            "type": "string"
          },
          "document_template_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-b2a1-4a31-8c2a-21db0c26314b"
          },
          "can_be_used_independently": {
            "type": "string"
          },
          "badge_mandatory_state": {
            "type": "string"
          },
          "template_fields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "fieldType": {
                  "type": "string",
                  "enum": [
                    "Text"
                  ]
                },
                "value": {
                  "type": "string"
                },
                "sortOrder": {
                  "type": "integer"
                }
              },
              "required": [
                "name",
                "fieldType",
                "value",
                "sortOrder"
              ]
            },
            "minItems": 0,
            "maxItems": 10
          }
        }
      },
      "FormField": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-302c-4282-8700-21db0d1cf58b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "form_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-5bba-4a01-8532-21db0e34afab"
          },
          "name": {
            "type": "string"
          },
          "field_data_json": {
            "type": "string"
          },
          "sort_order": {
            "type": "string"
          }
        }
      },
      "FormResponse": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-cd8d-4b1b-99b8-21db0309053b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "form_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-fc29-4d4e-82fd-21db0b08afab"
          },
          "staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-8fa0-4598-9f69-21db0b8234db"
          },
          "regarding_object": {
            "type": "string"
          },
          "regarding_object_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-310a-4d16-ac03-21db01f038fb"
          },
          "field_data": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "form_by_staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e191-4444-a1d5-21db0e424fbb"
          },
          "document_attachment_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-152a-43f6-bfae-21db085b041b"
          },
          "asset_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-7077-4fb9-af4d-21db0845693b"
          }
        }
      },
      "Job": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-e539-40c9-9ea4-21db0343830b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "created_by_staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-a9e9-4e78-8910-21db08c02ecb"
          },
          "date": {
            "type": "string",
            "example": "YYYY-MM-DD"
          },
          "company_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-41fc-4af5-aca5-21db07bc319b"
          },
          "job_address": {
            "type": "string",
            "maxLength": 500
          },
          "billing_address": {
            "type": "string",
            "maxLength": 500
          },
          "status": {
            "type": "string"
          },
          "job_description": {
            "type": "string"
          },
          "work_done_description": {
            "type": "string"
          },
          "lng": {
            "type": "number",
            "format": "float"
          },
          "lat": {
            "type": "number",
            "format": "float"
          },
          "generated_job_id": {
            "type": "string",
            "description": "(Read-only)"
          },
          "payment_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "payment_actioned_by_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-a547-45ae-a094-21db03087d5b"
          },
          "payment_method": {
            "type": "string"
          },
          "payment_amount": {
            "type": "string"
          },
          "total_invoice_amount": {
            "type": "string"
          },
          "category_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-af18-4701-8d91-21db0f31e1db"
          },
          "payment_note": {
            "type": "string"
          },
          "geo_is_valid": {
            "type": "string"
          },
          "purchase_order_number": {
            "type": "string",
            "maxLength": 100
          },
          "invoice_sent": {
            "type": "string"
          },
          "invoice_sent_stamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "ready_to_invoice": {
            "type": "string"
          },
          "ready_to_invoice_stamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "payment_processed": {
            "type": "string"
          },
          "payment_processed_stamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "geo_country": {
            "type": "string"
          },
          "geo_postcode": {
            "type": "string"
          },
          "geo_state": {
            "type": "string"
          },
          "geo_city": {
            "type": "string"
          },
          "geo_street": {
            "type": "string"
          },
          "geo_number": {
            "type": "string"
          },
          "queue_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-1500-485b-93bb-21db07f210eb"
          },
          "queue_expiry_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "queue_assigned_staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-f641-4a0e-961e-21db0624c4fb"
          },
          "payment_received": {
            "type": "string"
          },
          "payment_received_stamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "badges": {
            "type": "string"
          },
          "quote_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "quote_sent": {
            "type": "number",
            "description": "(Read-only). \n\nValid values are [0,1]",
            "enum": [
              0,
              1
            ]
          },
          "quote_sent_stamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "description": "(Read-only)"
          },
          "work_order_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "completion_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "completion_actioned_by_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-15c5-4ea0-8a01-21db005dfc8b"
          },
          "unsuccessful_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "job_is_scheduled_until_stamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "active_network_request_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-7620-454e-95ca-21db008d0cab"
          },
          "related_knowledge_articles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "knowledge_article_uuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "relevance": {
                  "type": "number"
                }
              },
              "required": [
                "knowledge_article_uuid",
                "relevance"
              ]
            }
          }
        },
        "required": [
          "status"
        ]
      },
      "JobActivity": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-6070-4258-bd53-21db0f0c845b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "job_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-63cf-4527-9f56-21db088bd0ab"
          },
          "staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-5e9d-4161-b1f3-21db086bd9db"
          },
          "start_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "end_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "activity_was_scheduled": {
            "type": "string"
          },
          "activity_was_recorded": {
            "type": "string"
          },
          "activity_was_automated": {
            "type": "string"
          },
          "has_been_opened": {
            "type": "string"
          },
          "has_been_opened_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "travel_time_in_seconds": {
            "type": "string"
          },
          "travel_distance_in_meters": {
            "type": "string"
          },
          "allocated_by_staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-7276-4c2d-b206-21db0bfddddb"
          },
          "allocated_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "material_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-8484-4411-868b-21db075c5e6b"
          },
          "edit_by_staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-6c64-4a73-bce1-21db0729220b",
            "readOnly": true,
            "description": "Staff Member who last modified record"
          }
        }
      },
      "JobAllocation": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-6b51-4ec2-a1ac-21db0e0c1efb"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "job_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-6bd2-4182-a569-21db0eb3202b"
          },
          "queue_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-b20b-4fa8-917f-21db086b0c4b"
          },
          "staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-27f6-4c77-8f39-21db01c8e6eb"
          },
          "allocation_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "allocation_window_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-46a9-4c37-abfc-21db06e33b4b"
          },
          "allocated_by_staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-5787-4324-ae63-21db0c48bb0b"
          },
          "allocated_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "expiry_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "read_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "completion_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "estimated_duration": {
            "type": "string"
          },
          "revised_duration": {
            "type": "string"
          },
          "sort_priority": {
            "type": "string"
          },
          "requires_acceptance": {
            "type": "string"
          },
          "acceptance_status": {
            "type": "string"
          },
          "acceptance_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          }
        }
      },
      "JobChecklist": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-72e6-47d1-b2ef-21db0ae2678b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "job_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-c767-4fd5-bcec-21db07cf1b7b"
          },
          "name": {
            "type": "string",
            "maxLength": 256
          },
          "section_name": {
            "type": "string",
            "maxLength": 256
          },
          "item_type": {
            "type": "string"
          },
          "sort_order": {
            "type": "number"
          },
          "completed_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "completed_by_staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-a6a9-4ebb-8fce-21db0fdc5f4b"
          },
          "completed_during_checkin_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-8c52-4797-9918-21db0c7a9c4b"
          },
          "reminder_type": {
            "type": "string"
          },
          "reminder_data": {
            "type": "object",
            "properties": {
              "absoluteDateTime": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}\\ \\d{2}:\\d{2}:\\d{2}$"
              },
              "relativeDateTime": {
                "type": "object",
                "properties": {
                  "baseDate": {
                    "type": "string",
                    "enum": [
                      "JOB_CREATE_TIME",
                      "NEXT_BOOKING_TIME"
                    ]
                  },
                  "unit": {
                    "type": "string",
                    "enum": [
                      "DAY",
                      "HOUR",
                      "MINUTE"
                    ]
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Number of units to add/subtract from base date. Negative quantities mean the reminder occurs before the base date. Reminders scheduled into the past will not occur."
                  }
                },
                "required": [
                  "baseDate",
                  "unit",
                  "quantity"
                ]
              }
            },
            "anyOf": [
              {
                "required": [
                  "absoluteDateTime"
                ]
              },
              {
                "required": [
                  "relativeDateTime"
                ]
              },
              {
                "not": {
                  "anyOf": [
                    {
                      "required": [
                        "absoluteDateTime"
                      ]
                    },
                    {
                      "required": [
                        "relativeDateTime"
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "regarding_object": {
            "type": "string",
            "description": "The type of object which this checklist item is related to. For example, for Form checklists, this will be 'Form'."
          },
          "regarding_object_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-05ae-4e64-bcef-21db0da92c1b",
            "description": "The UUID of the object which this checklists item is related to. For example, for Form checklists, this is the UUID of the Form that must be completed to complete the checklist item."
          },
          "fulfilled_by_object_name": {
            "type": "string",
            "description": "The type of object which completes this checklist item. For example, for Form checklists, this will be 'FormResponse'."
          },
          "fulfilled_by_object_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-c68a-4428-bfb7-21db07ab814b",
            "description": "The UUID of the object which completes this checklist item. For example, for Form checklists, this references the UUID of a FormResponse record."
          },
          "assigned_to_staff_uuids": {
            "type": "array",
            "format": "uuid",
            "example": "123e4567-acbf-4b7c-b79f-21db0f9a428b",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
              "description": "Must be the UUID of a Staff record"
            },
            "maxItems": 1
          },
          "is_locked": {
            "type": "number",
            "description": "The UUID of the object which completes this checklist item. For example, for Form checklists, this references the UUID of a FormResponse record. (Read-only). \n\nValid values are [0,1]",
            "enum": [
              0,
              1
            ]
          }
        }
      },
      "JobContact": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-8ce0-40af-a8d2-21db0c177cdb"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "job_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-d182-4864-891a-21db01d84a6b"
          },
          "first": {
            "type": "string"
          },
          "last": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "type": {
            "type": "string"
          },
          "is_primary_contact": {
            "type": "string"
          }
        }
      },
      "JobMaterial": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-b4c6-4f01-adc1-21db0b4011fb"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "job_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-da04-4cb5-95d9-21db06f13f9b"
          },
          "material_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-22f9-43b2-a08b-21db0504683b"
          },
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "displayed_amount": {
            "type": "string"
          },
          "displayed_amount_is_tax_inclusive": {
            "type": "string"
          },
          "tax_rate_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-d779-4fda-98a6-21db03e3173b"
          },
          "sort_order": {
            "type": "string"
          },
          "cost": {
            "type": "string"
          },
          "displayed_cost": {
            "type": "string"
          },
          "job_material_bundle_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-46a5-4804-86c7-21db014fd21b",
            "description": "UUID of a JobMaterialBundle which this JobMaterial belongs to. The default value is blank, which means that the JobMaterial is not part of a JobMaterialBundle."
          }
        },
        "required": [
          "quantity"
        ]
      },
      "JobMaterialBundle": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-8009-4301-adcb-21db00d8b3bb"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "item_number": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          },
          "sort_order": {
            "type": "number"
          },
          "material_bundle_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-a4e3-44ec-b890-21db09adf79b",
            "description": "UUID of the MaterialBundle which this JobMaterialBundle was originally created from."
          },
          "job_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-7192-4ce3-bcef-21db0e73b31b"
          }
        }
      },
      "JobPayment": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-2358-4eee-abfe-21db0128779b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "job_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-f12a-4446-b0a2-21db0526306b"
          },
          "actioned_by_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-2289-45a5-8ba8-21db0304475b"
          },
          "timestamp": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "attachment_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-7be9-4126-a2d8-21db076c049b"
          },
          "is_deposit": {
            "type": "number",
            "description": "(Read-only). \n\nValid values are [0,1]",
            "enum": [
              0,
              1
            ]
          }
        }
      },
      "KnowledgeArticle": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-1497-42f2-9368-21db0c98b51b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "article_type": {
            "type": "string"
          },
          "tags": {
            "type": "string"
          },
          "relationships": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "object_name": {
                  "type": "string",
                  "enum": [
                    "Job",
                    "job"
                  ]
                },
                "object_uuid": {
                  "type": "string",
                  "format": "uuid"
                },
                "object_description": {
                  "type": "string"
                },
                "create_date": {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}\\ \\d{2}:\\d{2}:\\d{2}$"
                }
              },
              "required": [
                "object_name",
                "object_uuid"
              ]
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "Location": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-9fd3-4c57-a5fb-21db046572bb"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "name": {
            "type": "string",
            "description": "Location's name",
            "maxLength": 50
          },
          "line1": {
            "type": "string",
            "maxLength": 100
          },
          "line2": {
            "type": "string",
            "maxLength": 100
          },
          "line3": {
            "type": "string",
            "maxLength": 100
          },
          "city": {
            "type": "string",
            "maxLength": 50
          },
          "country": {
            "type": "string",
            "maxLength": 100
          },
          "post_code": {
            "type": "string",
            "maxLength": 100
          },
          "phone_1": {
            "type": "string",
            "maxLength": 100
          },
          "state": {
            "type": "string",
            "description": "Address State"
          },
          "lng": {
            "type": "number",
            "format": "float"
          },
          "lat": {
            "type": "number",
            "format": "float"
          }
        },
        "required": [
          "name",
          "state"
        ]
      },
      "Material": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-aa23-4dc7-8c7e-21db0649634b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "name": {
            "type": "string"
          },
          "item_number": {
            "type": "string",
            "maxLength": 30
          },
          "price": {
            "type": "string"
          },
          "cost": {
            "type": "string"
          },
          "item_description": {
            "type": "string"
          },
          "quantity_in_stock": {
            "type": "number"
          },
          "price_includes_taxes": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "description": "\n\nValid values are [0,1]"
          },
          "use_description_for_invoicing": {
            "type": "string"
          },
          "tax_rate_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e229-48b6-85a3-21db091a6cfb"
          },
          "barcode": {
            "type": "string"
          },
          "item_is_inventoried": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "description": "\n\nValid values are [0,1]"
          }
        },
        "required": [
          "name"
        ]
      },
      "MaterialBundle": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-647c-4c38-975c-21db048ffacb"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "item_number": {
            "type": "string",
            "maxLength": 30
          },
          "name": {
            "type": "string"
          },
          "material_list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Must be the UUID of a Material record"
                },
                "quantity": {
                  "type": "number",
                  "minimum": 0
                }
              },
              "required": [
                "uuid",
                "quantity"
              ]
            },
            "minItems": 1,
            "maxItems": 50
          }
        },
        "required": [
          "item_number"
        ]
      },
      "Note": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-5b77-468b-a8f1-21db04bfd46b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "related_object": {
            "type": "string"
          },
          "related_object_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-2e3d-4bba-9fb0-21db0d46300b"
          },
          "note": {
            "type": "string"
          },
          "action_required": {
            "type": "string"
          },
          "action_completed_by_staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-bd70-4ac9-bf9b-21db08eadb5b"
          },
          "edit_by_staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-cbed-422c-b253-21db0067805b",
            "readOnly": true,
            "description": "Staff Member who last modified record"
          },
          "create_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "description": "Record creation timestamp"
          }
        }
      },
      "Queue": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-3db0-421d-bdbd-21db0b467dab"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "name": {
            "type": "string"
          },
          "default_timeframe": {
            "type": "number"
          },
          "subscribed_staff": {
            "type": "string"
          },
          "requires_assignment": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "description": "\n\nValid values are [0,1]"
          }
        }
      },
      "SecurityRole": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-7188-4533-9b12-21db066c13db"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "name": {
            "type": "string",
            "description": "The name given to the security role",
            "maxLength": 50
          },
          "role_description": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "SmsTemplate": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-f872-4ac2-8e70-21db085c492b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "name": {
            "type": "string",
            "maxLength": 50
          },
          "message": {
            "type": "string",
            "maxLength": 612
          }
        },
        "required": [
          "name"
        ]
      },
      "Staff": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-e2a2-4517-a16f-21db0472b58b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "first": {
            "type": "string",
            "description": "Staff First Name",
            "maxLength": 30
          },
          "last": {
            "type": "string",
            "description": "Staff Last Name",
            "maxLength": 30
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Staff Email Address. This is also your login name."
          },
          "mobile": {
            "type": "string"
          },
          "lng": {
            "type": "number",
            "format": "float"
          },
          "lat": {
            "type": "number",
            "format": "float"
          },
          "geo_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "job_title": {
            "type": "string"
          },
          "navigating_to_job_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-50b1-449c-b34e-21db017f019b"
          },
          "navigating_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "navigating_expiry_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "color": {
            "type": "string"
          },
          "custom_icon_url": {
            "type": "string"
          },
          "status_message": {
            "type": "string"
          },
          "status_message_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "can_receive_push_notification": {
            "type": "string"
          },
          "hide_from_schedule": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "description": "\n\nValid values are [0,1]"
          },
          "security_role_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-fecf-43fc-a2be-21db0329776b"
          }
        },
        "required": [
          "first",
          "last"
        ]
      },
      "StaffMessage": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-a21f-4407-9561-21db081478fb"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "from_staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-6b83-4841-a484-21db03b38f1b"
          },
          "to_staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-a9b8-44d8-9e85-21db0d100f8b"
          },
          "sent_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "delivered_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "read_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "message": {
            "type": "string"
          },
          "regarding_job_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-5ad3-4c4a-80db-21db045cb7eb"
          },
          "attached_json": {
            "type": "string"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-0078-496e-85d6-21db0c7a35fb"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "due_date": {
            "type": "string",
            "example": "YYYY-MM-DD"
          },
          "task_details": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "related_object": {
            "type": "string"
          },
          "related_object_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-d8ee-4433-976b-21db0b7ecd6b"
          },
          "task_complete": {
            "type": "string"
          },
          "completed_timestamp": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS"
          },
          "completed_by_staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-2acf-48bc-ae41-21db02c2208b"
          },
          "assigned_to_staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-4218-4b45-ae12-21db0172071b"
          },
          "lng": {
            "type": "number",
            "format": "float"
          },
          "lat": {
            "type": "number",
            "format": "float"
          },
          "created_by_staff_uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-f551-46e5-8450-21db01069a0b"
          },
          "create_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "description": "Record creation timestamp"
          }
        },
        "required": [
          "name"
        ]
      },
      "TaxRate": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-ea93-44d1-a0b1-21db0045458b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "name": {
            "type": "string",
            "maxLength": 50
          },
          "amount": {
            "type": "string"
          },
          "is_default_tax_rate": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "description": "\n\nValid values are [0,1]"
          }
        },
        "required": [
          "name"
        ]
      },
      "Vendor": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Record UUID key",
            "example": "123e4567-a166-4076-8950-21db0ceabc4b"
          },
          "active": {
            "type": "number",
            "enum": [
              0,
              1
            ],
            "default": 1,
            "description": "Record active/deleted flag. \n\nValid values are [0,1]"
          },
          "edit_date": {
            "type": "string",
            "example": "YYYY-MM-DD HH:MM:SS",
            "readOnly": true,
            "description": "Record last modified timestamp"
          },
          "name": {
            "type": "string",
            "description": "Company Name",
            "maxLength": 200
          },
          "abn_number": {
            "type": "string",
            "description": "Company ABN Number (Australian Accounts Only)"
          },
          "business_number": {
            "type": "string"
          },
          "website": {
            "type": "string",
            "description": "Company Website address",
            "maxLength": 100
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "email_accounts": {
            "type": "string"
          },
          "billing_address": {
            "type": "string"
          },
          "accepted_payment_methods": {
            "type": "string"
          },
          "default_region": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "opening_time_monday": {
            "type": "string"
          },
          "closing_time_monday": {
            "type": "string"
          },
          "opening_time_tuesday": {
            "type": "string"
          },
          "closing_time_tuesday": {
            "type": "string"
          },
          "opening_time_wednesday": {
            "type": "string"
          },
          "closing_time_wednesday": {
            "type": "string"
          },
          "opening_time_thursday": {
            "type": "string"
          },
          "closing_time_thursday": {
            "type": "string"
          },
          "opening_time_friday": {
            "type": "string"
          },
          "closing_time_friday": {
            "type": "string"
          },
          "opening_time_saturday": {
            "type": "string"
          },
          "closing_time_saturday": {
            "type": "string"
          },
          "opening_time_sunday": {
            "type": "string"
          },
          "closing_time_sunday": {
            "type": "string"
          },
          "timezone_name": {
            "type": "string"
          },
          "invoice_terms": {
            "type": "string"
          },
          "job_default_status": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  }
}